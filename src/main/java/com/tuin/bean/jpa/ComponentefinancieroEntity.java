/*
 * Created on 28 ago 2017 ( Time 17:50:57 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tuin.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "componentefinanciero"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="componentefinanciero", catalog="app" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ComponentefinancieroEntity.countAll", query="SELECT COUNT(x) FROM ComponentefinancieroEntity x" )
} )
public class ComponentefinancieroEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nombre", nullable=false, length=45)
    private String     nombre       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="vigenciaDesde", nullable=false)
    private Date       vigenciadesde ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="vigenciaHasta", nullable=false)
    private Date       vigenciahasta ;

    @Column(name="rubro", nullable=false, length=45)
    private String     rubro        ;

	// "tipodocumentoid" (column "tipoDocumentoId") is not defined by itself because used as FK in a link 
	// "tipocomponentefinancieroid" (column "tipoComponenteFinancieroId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="componentefinanciero", targetEntity=ComponentedocumentoEntity.class)
    private List<ComponentedocumentoEntity> listOfComponentedocumento;

    @ManyToOne
    @JoinColumn(name="tipoDocumentoId", referencedColumnName="id")
    private TipodocumentoEntity tipodocumento;

    @ManyToOne
    @JoinColumn(name="tipoComponenteFinancieroId", referencedColumnName="id")
    private TipocomponentefinancieroEntity tipocomponentefinanciero;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ComponentefinancieroEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nombre ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }

    //--- DATABASE MAPPING : vigenciaDesde ( DATETIME ) 
    public void setVigenciadesde( Date vigenciadesde ) {
        this.vigenciadesde = vigenciadesde;
    }
    public Date getVigenciadesde() {
        return this.vigenciadesde;
    }

    //--- DATABASE MAPPING : vigenciaHasta ( DATETIME ) 
    public void setVigenciahasta( Date vigenciahasta ) {
        this.vigenciahasta = vigenciahasta;
    }
    public Date getVigenciahasta() {
        return this.vigenciahasta;
    }

    //--- DATABASE MAPPING : rubro ( VARCHAR ) 
    public void setRubro( String rubro ) {
        this.rubro = rubro;
    }
    public String getRubro() {
        return this.rubro;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfComponentedocumento( List<ComponentedocumentoEntity> listOfComponentedocumento ) {
        this.listOfComponentedocumento = listOfComponentedocumento;
    }
    public List<ComponentedocumentoEntity> getListOfComponentedocumento() {
        return this.listOfComponentedocumento;
    }

    public void setTipodocumento( TipodocumentoEntity tipodocumento ) {
        this.tipodocumento = tipodocumento;
    }
    public TipodocumentoEntity getTipodocumento() {
        return this.tipodocumento;
    }

    public void setTipocomponentefinanciero( TipocomponentefinancieroEntity tipocomponentefinanciero ) {
        this.tipocomponentefinanciero = tipocomponentefinanciero;
    }
    public TipocomponentefinancieroEntity getTipocomponentefinanciero() {
        return this.tipocomponentefinanciero;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nombre);
        sb.append("|");
        sb.append(vigenciadesde);
        sb.append("|");
        sb.append(vigenciahasta);
        sb.append("|");
        sb.append(rubro);
        return sb.toString(); 
    } 

}
