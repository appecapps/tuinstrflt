/*
 * Created on 28 ago 2017 ( Time 17:50:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tuin.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "destinohorario"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="destinohorario", catalog="app" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="DestinohorarioEntity.countAll", query="SELECT COUNT(x) FROM DestinohorarioEntity x" )
} )
public class DestinohorarioEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="costo", nullable=false)
    private BigDecimal costo        ;

    @Column(name="minimoPasajeros", nullable=false)
    private Integer    minimopasajeros ;

    @Column(name="automatico", nullable=false)
    private Byte       automatico   ;

	// "horarioid" (column "horarioId") is not defined by itself because used as FK in a link 
	// "destinoid" (column "destinoId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="destinoId", referencedColumnName="id")
    private CiudadEntity ciudad      ;

    @ManyToOne
    @JoinColumn(name="horarioId", referencedColumnName="id")
    private HorarioEntity horario     ;

    @OneToMany(mappedBy="destinohorario", targetEntity=ViajeEntity.class)
    private List<ViajeEntity> listOfViaje ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public DestinohorarioEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : costo ( DECIMAL ) 
    public void setCosto( BigDecimal costo ) {
        this.costo = costo;
    }
    public BigDecimal getCosto() {
        return this.costo;
    }

    //--- DATABASE MAPPING : minimoPasajeros ( INT ) 
    public void setMinimopasajeros( Integer minimopasajeros ) {
        this.minimopasajeros = minimopasajeros;
    }
    public Integer getMinimopasajeros() {
        return this.minimopasajeros;
    }

    //--- DATABASE MAPPING : automatico ( TINYINT ) 
    public void setAutomatico( Byte automatico ) {
        this.automatico = automatico;
    }
    public Byte getAutomatico() {
        return this.automatico;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCiudad( CiudadEntity ciudad ) {
        this.ciudad = ciudad;
    }
    public CiudadEntity getCiudad() {
        return this.ciudad;
    }

    public void setHorario( HorarioEntity horario ) {
        this.horario = horario;
    }
    public HorarioEntity getHorario() {
        return this.horario;
    }

    public void setListOfViaje( List<ViajeEntity> listOfViaje ) {
        this.listOfViaje = listOfViaje;
    }
    public List<ViajeEntity> getListOfViaje() {
        return this.listOfViaje;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(costo);
        sb.append("|");
        sb.append(minimopasajeros);
        sb.append("|");
        sb.append(automatico);
        return sb.toString(); 
    } 

}
