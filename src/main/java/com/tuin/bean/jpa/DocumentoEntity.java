/*
 * Created on 28 ago 2017 ( Time 17:50:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tuin.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "documento"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="documento", catalog="app" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="DocumentoEntity.countAll", query="SELECT COUNT(x) FROM DocumentoEntity x" )
} )
public class DocumentoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="numero", nullable=false, length=45)
    private String     numero       ;

    @Column(name="descripcion", nullable=false, length=45)
    private String     descripcion  ;

    @Column(name="valor", nullable=false)
    private BigDecimal valor        ;

    @Column(name="origenId", nullable=false)
    private Long       origenid     ;

    @Column(name="origen", nullable=false, length=45)
    private String     origen       ;

	// "estadoid" (column "estadoId") is not defined by itself because used as FK in a link 
	// "tipodocumentoid" (column "tipoDocumentoId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="documento", targetEntity=FormapagodocumentoEntity.class)
    private List<FormapagodocumentoEntity> listOfFormapagodocumento;

    @ManyToOne
    @JoinColumn(name="estadoId", referencedColumnName="id")
    private EstadoEntity estado      ;

    @ManyToOne
    @JoinColumn(name="tipoDocumentoId", referencedColumnName="id")
    private TipodocumentoEntity tipodocumento;

    @OneToMany(mappedBy="documento", targetEntity=ComponentedocumentoEntity.class)
    private List<ComponentedocumentoEntity> listOfComponentedocumento;

    @OneToMany(mappedBy="documento", targetEntity=FacturaelectronicaEntity.class)
    private List<FacturaelectronicaEntity> listOfFacturaelectronica;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public DocumentoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : numero ( VARCHAR ) 
    public void setNumero( String numero ) {
        this.numero = numero;
    }
    public String getNumero() {
        return this.numero;
    }

    //--- DATABASE MAPPING : descripcion ( VARCHAR ) 
    public void setDescripcion( String descripcion ) {
        this.descripcion = descripcion;
    }
    public String getDescripcion() {
        return this.descripcion;
    }

    //--- DATABASE MAPPING : valor ( DECIMAL ) 
    public void setValor( BigDecimal valor ) {
        this.valor = valor;
    }
    public BigDecimal getValor() {
        return this.valor;
    }

    //--- DATABASE MAPPING : origenId ( BIGINT ) 
    public void setOrigenid( Long origenid ) {
        this.origenid = origenid;
    }
    public Long getOrigenid() {
        return this.origenid;
    }

    //--- DATABASE MAPPING : origen ( VARCHAR ) 
    public void setOrigen( String origen ) {
        this.origen = origen;
    }
    public String getOrigen() {
        return this.origen;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfFormapagodocumento( List<FormapagodocumentoEntity> listOfFormapagodocumento ) {
        this.listOfFormapagodocumento = listOfFormapagodocumento;
    }
    public List<FormapagodocumentoEntity> getListOfFormapagodocumento() {
        return this.listOfFormapagodocumento;
    }

    public void setEstado( EstadoEntity estado ) {
        this.estado = estado;
    }
    public EstadoEntity getEstado() {
        return this.estado;
    }

    public void setTipodocumento( TipodocumentoEntity tipodocumento ) {
        this.tipodocumento = tipodocumento;
    }
    public TipodocumentoEntity getTipodocumento() {
        return this.tipodocumento;
    }

    public void setListOfComponentedocumento( List<ComponentedocumentoEntity> listOfComponentedocumento ) {
        this.listOfComponentedocumento = listOfComponentedocumento;
    }
    public List<ComponentedocumentoEntity> getListOfComponentedocumento() {
        return this.listOfComponentedocumento;
    }

    public void setListOfFacturaelectronica( List<FacturaelectronicaEntity> listOfFacturaelectronica ) {
        this.listOfFacturaelectronica = listOfFacturaelectronica;
    }
    public List<FacturaelectronicaEntity> getListOfFacturaelectronica() {
        return this.listOfFacturaelectronica;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(numero);
        sb.append("|");
        sb.append(descripcion);
        sb.append("|");
        sb.append(valor);
        sb.append("|");
        sb.append(origenid);
        sb.append("|");
        sb.append(origen);
        return sb.toString(); 
    } 

}
