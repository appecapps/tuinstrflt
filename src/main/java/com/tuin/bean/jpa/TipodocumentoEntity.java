/*
 * Created on 28 ago 2017 ( Time 17:51:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tuin.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "tipodocumento"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="tipodocumento", catalog="app" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TipodocumentoEntity.countAll", query="SELECT COUNT(x) FROM TipodocumentoEntity x" )
} )
public class TipodocumentoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="nombre", nullable=false, length=45)
    private String     nombre       ;

	// "tipocarteraid" (column "tipoCarteraId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="tipodocumento", targetEntity=ComponentefinancieroEntity.class)
    private List<ComponentefinancieroEntity> listOfComponentefinanciero;

    @OneToMany(mappedBy="tipodocumento", targetEntity=FormapagoEntity.class)
    private List<FormapagoEntity> listOfFormapago;

    @OneToMany(mappedBy="tipodocumento", targetEntity=DocumentoEntity.class)
    private List<DocumentoEntity> listOfDocumento;

    @ManyToOne
    @JoinColumn(name="tipoCarteraId", referencedColumnName="id")
    private TipocarteraEntity tipocartera ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TipodocumentoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : nombre ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfComponentefinanciero( List<ComponentefinancieroEntity> listOfComponentefinanciero ) {
        this.listOfComponentefinanciero = listOfComponentefinanciero;
    }
    public List<ComponentefinancieroEntity> getListOfComponentefinanciero() {
        return this.listOfComponentefinanciero;
    }

    public void setListOfFormapago( List<FormapagoEntity> listOfFormapago ) {
        this.listOfFormapago = listOfFormapago;
    }
    public List<FormapagoEntity> getListOfFormapago() {
        return this.listOfFormapago;
    }

    public void setListOfDocumento( List<DocumentoEntity> listOfDocumento ) {
        this.listOfDocumento = listOfDocumento;
    }
    public List<DocumentoEntity> getListOfDocumento() {
        return this.listOfDocumento;
    }

    public void setTipocartera( TipocarteraEntity tipocartera ) {
        this.tipocartera = tipocartera;
    }
    public TipocarteraEntity getTipocartera() {
        return this.tipocartera;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nombre);
        return sb.toString(); 
    } 

}
