/*
 * Created on 28 ago 2017 ( Time 17:51:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.tuin.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "vehiculo"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="vehiculo", catalog="app" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="VehiculoEntity.countAll", query="SELECT COUNT(x) FROM VehiculoEntity x" )
} )
public class VehiculoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="placa", nullable=false, length=25)
    private String     placa        ;

    @Column(name="motor", nullable=false, length=45)
    private String     motor        ;

    @Column(name="chasis", nullable=false, length=45)
    private String     chasis       ;

    @Column(name="pasajeros", nullable=false)
    private Integer    pasajeros    ;

    @Column(name="anio", nullable=false)
    private Integer    anio         ;

	// "modeloid" (column "modeloId") is not defined by itself because used as FK in a link 
	// "colorid" (column "colorId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="modeloId", referencedColumnName="id")
    private ModeloEntity modelo      ;

    @OneToMany(mappedBy="vehiculo", targetEntity=VehiculoservicioEntity.class)
    private List<VehiculoservicioEntity> listOfVehiculoservicio;

    @OneToMany(mappedBy="vehiculo", targetEntity=ChofervehiculoEntity.class)
    private List<ChofervehiculoEntity> listOfChofervehiculo;

    @ManyToOne
    @JoinColumn(name="colorId", referencedColumnName="id")
    private ColorEntity color       ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public VehiculoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : placa ( VARCHAR ) 
    public void setPlaca( String placa ) {
        this.placa = placa;
    }
    public String getPlaca() {
        return this.placa;
    }

    //--- DATABASE MAPPING : motor ( VARCHAR ) 
    public void setMotor( String motor ) {
        this.motor = motor;
    }
    public String getMotor() {
        return this.motor;
    }

    //--- DATABASE MAPPING : chasis ( VARCHAR ) 
    public void setChasis( String chasis ) {
        this.chasis = chasis;
    }
    public String getChasis() {
        return this.chasis;
    }

    //--- DATABASE MAPPING : pasajeros ( INT ) 
    public void setPasajeros( Integer pasajeros ) {
        this.pasajeros = pasajeros;
    }
    public Integer getPasajeros() {
        return this.pasajeros;
    }

    //--- DATABASE MAPPING : anio ( INT ) 
    public void setAnio( Integer anio ) {
        this.anio = anio;
    }
    public Integer getAnio() {
        return this.anio;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setModelo( ModeloEntity modelo ) {
        this.modelo = modelo;
    }
    public ModeloEntity getModelo() {
        return this.modelo;
    }

    public void setListOfVehiculoservicio( List<VehiculoservicioEntity> listOfVehiculoservicio ) {
        this.listOfVehiculoservicio = listOfVehiculoservicio;
    }
    public List<VehiculoservicioEntity> getListOfVehiculoservicio() {
        return this.listOfVehiculoservicio;
    }

    public void setListOfChofervehiculo( List<ChofervehiculoEntity> listOfChofervehiculo ) {
        this.listOfChofervehiculo = listOfChofervehiculo;
    }
    public List<ChofervehiculoEntity> getListOfChofervehiculo() {
        return this.listOfChofervehiculo;
    }

    public void setColor( ColorEntity color ) {
        this.color = color;
    }
    public ColorEntity getColor() {
        return this.color;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(placa);
        sb.append("|");
        sb.append(motor);
        sb.append("|");
        sb.append(chasis);
        sb.append("|");
        sb.append(pasajeros);
        sb.append("|");
        sb.append(anio);
        return sb.toString(); 
    } 

}
