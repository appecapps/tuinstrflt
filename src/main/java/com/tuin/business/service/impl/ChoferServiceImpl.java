/*
 * Created on 28 ago 2017 ( Time 17:51:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Chofer;
import com.tuin.bean.jpa.ChoferEntity;
import java.math.BigDecimal;
import java.util.List;
import com.tuin.business.service.ChoferService;
import com.tuin.business.service.mapping.ChoferServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ChoferPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ChoferService
 */
@Component
public class ChoferServiceImpl implements ChoferService {

	private ChoferPersistence choferPersistence;

	@Resource
	private ChoferServiceMapper choferServiceMapper;
	
	public ChoferServiceImpl() {
		choferPersistence = PersistenceServiceProvider.getService(ChoferPersistence.class);
	}
		
	@Override
	public Chofer findById(Long id) {
		ChoferEntity entity = choferPersistence.load(id);
		return choferServiceMapper.mapChoferEntityToChofer(entity);
	}

	@Override
	public List<Chofer> findAll() {
		List<ChoferEntity> entities = choferPersistence.loadAll();
		List<Chofer> beans = new ArrayList<Chofer>();
		for(ChoferEntity entity : entities) {
			beans.add(choferServiceMapper.mapChoferEntityToChofer(entity));
		}
		return beans;
	}

	@Override
	public Chofer save(Chofer chofer) {
		return update(chofer) ;
	}

	@Override
	public Chofer create(Chofer chofer) {
		if(choferPersistence.load(chofer.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ChoferEntity choferEntity = new ChoferEntity();
		choferServiceMapper.mapChoferToChoferEntity(chofer, choferEntity);
		ChoferEntity choferEntitySaved = choferPersistence.save(choferEntity);
		return choferServiceMapper.mapChoferEntityToChofer(choferEntitySaved);
	}

	@Override
	public Chofer update(Chofer chofer) {
		ChoferEntity choferEntity = choferPersistence.load(chofer.getId());
		choferServiceMapper.mapChoferToChoferEntity(chofer, choferEntity);
		ChoferEntity choferEntitySaved = choferPersistence.save(choferEntity);
		return choferServiceMapper.mapChoferEntityToChofer(choferEntitySaved);
	}

	@Override
	public void delete(Long id) {
		choferPersistence.delete(id);
	}

	public ChoferPersistence getChoferPersistence() {
		return choferPersistence;
	}

	public void setChoferPersistence(ChoferPersistence choferPersistence) {
		this.choferPersistence = choferPersistence;
	}

	public ChoferServiceMapper getChoferServiceMapper() {
		return choferServiceMapper;
	}

	public void setChoferServiceMapper(ChoferServiceMapper choferServiceMapper) {
		this.choferServiceMapper = choferServiceMapper;
	}

}
