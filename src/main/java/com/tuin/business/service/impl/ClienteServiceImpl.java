/*
 * Created on 28 ago 2017 ( Time 17:51:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Cliente;
import com.tuin.bean.jpa.ClienteEntity;
import java.util.List;
import com.tuin.business.service.ClienteService;
import com.tuin.business.service.mapping.ClienteServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ClientePersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ClienteService
 */
@Component
public class ClienteServiceImpl implements ClienteService {

	private ClientePersistence clientePersistence;

	@Resource
	private ClienteServiceMapper clienteServiceMapper;
	
	public ClienteServiceImpl() {
		clientePersistence = PersistenceServiceProvider.getService(ClientePersistence.class);
	}
		
	@Override
	public Cliente findById(Long id) {
		ClienteEntity entity = clientePersistence.load(id);
		return clienteServiceMapper.mapClienteEntityToCliente(entity);
	}

	@Override
	public List<Cliente> findAll() {
		List<ClienteEntity> entities = clientePersistence.loadAll();
		List<Cliente> beans = new ArrayList<Cliente>();
		for(ClienteEntity entity : entities) {
			beans.add(clienteServiceMapper.mapClienteEntityToCliente(entity));
		}
		return beans;
	}

	@Override
	public Cliente save(Cliente cliente) {
		return update(cliente) ;
	}

	@Override
	public Cliente create(Cliente cliente) {
		if(clientePersistence.load(cliente.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ClienteEntity clienteEntity = new ClienteEntity();
		clienteServiceMapper.mapClienteToClienteEntity(cliente, clienteEntity);
		ClienteEntity clienteEntitySaved = clientePersistence.save(clienteEntity);
		return clienteServiceMapper.mapClienteEntityToCliente(clienteEntitySaved);
	}

	@Override
	public Cliente update(Cliente cliente) {
		ClienteEntity clienteEntity = clientePersistence.load(cliente.getId());
		clienteServiceMapper.mapClienteToClienteEntity(cliente, clienteEntity);
		ClienteEntity clienteEntitySaved = clientePersistence.save(clienteEntity);
		return clienteServiceMapper.mapClienteEntityToCliente(clienteEntitySaved);
	}

	@Override
	public void delete(Long id) {
		clientePersistence.delete(id);
	}

	public ClientePersistence getClientePersistence() {
		return clientePersistence;
	}

	public void setClientePersistence(ClientePersistence clientePersistence) {
		this.clientePersistence = clientePersistence;
	}

	public ClienteServiceMapper getClienteServiceMapper() {
		return clienteServiceMapper;
	}

	public void setClienteServiceMapper(ClienteServiceMapper clienteServiceMapper) {
		this.clienteServiceMapper = clienteServiceMapper;
	}

}
