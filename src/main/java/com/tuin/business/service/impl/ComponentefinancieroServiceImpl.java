/*
 * Created on 28 ago 2017 ( Time 17:51:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Componentefinanciero;
import com.tuin.bean.jpa.ComponentefinancieroEntity;
import java.util.Date;
import java.util.List;
import com.tuin.business.service.ComponentefinancieroService;
import com.tuin.business.service.mapping.ComponentefinancieroServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ComponentefinancieroPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ComponentefinancieroService
 */
@Component
public class ComponentefinancieroServiceImpl implements ComponentefinancieroService {

	private ComponentefinancieroPersistence componentefinancieroPersistence;

	@Resource
	private ComponentefinancieroServiceMapper componentefinancieroServiceMapper;
	
	public ComponentefinancieroServiceImpl() {
		componentefinancieroPersistence = PersistenceServiceProvider.getService(ComponentefinancieroPersistence.class);
	}
		
	@Override
	public Componentefinanciero findById(Long id) {
		ComponentefinancieroEntity entity = componentefinancieroPersistence.load(id);
		return componentefinancieroServiceMapper.mapComponentefinancieroEntityToComponentefinanciero(entity);
	}

	@Override
	public List<Componentefinanciero> findAll() {
		List<ComponentefinancieroEntity> entities = componentefinancieroPersistence.loadAll();
		List<Componentefinanciero> beans = new ArrayList<Componentefinanciero>();
		for(ComponentefinancieroEntity entity : entities) {
			beans.add(componentefinancieroServiceMapper.mapComponentefinancieroEntityToComponentefinanciero(entity));
		}
		return beans;
	}

	@Override
	public Componentefinanciero save(Componentefinanciero componentefinanciero) {
		return update(componentefinanciero) ;
	}

	@Override
	public Componentefinanciero create(Componentefinanciero componentefinanciero) {
		if(componentefinancieroPersistence.load(componentefinanciero.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ComponentefinancieroEntity componentefinancieroEntity = new ComponentefinancieroEntity();
		componentefinancieroServiceMapper.mapComponentefinancieroToComponentefinancieroEntity(componentefinanciero, componentefinancieroEntity);
		ComponentefinancieroEntity componentefinancieroEntitySaved = componentefinancieroPersistence.save(componentefinancieroEntity);
		return componentefinancieroServiceMapper.mapComponentefinancieroEntityToComponentefinanciero(componentefinancieroEntitySaved);
	}

	@Override
	public Componentefinanciero update(Componentefinanciero componentefinanciero) {
		ComponentefinancieroEntity componentefinancieroEntity = componentefinancieroPersistence.load(componentefinanciero.getId());
		componentefinancieroServiceMapper.mapComponentefinancieroToComponentefinancieroEntity(componentefinanciero, componentefinancieroEntity);
		ComponentefinancieroEntity componentefinancieroEntitySaved = componentefinancieroPersistence.save(componentefinancieroEntity);
		return componentefinancieroServiceMapper.mapComponentefinancieroEntityToComponentefinanciero(componentefinancieroEntitySaved);
	}

	@Override
	public void delete(Long id) {
		componentefinancieroPersistence.delete(id);
	}

	public ComponentefinancieroPersistence getComponentefinancieroPersistence() {
		return componentefinancieroPersistence;
	}

	public void setComponentefinancieroPersistence(ComponentefinancieroPersistence componentefinancieroPersistence) {
		this.componentefinancieroPersistence = componentefinancieroPersistence;
	}

	public ComponentefinancieroServiceMapper getComponentefinancieroServiceMapper() {
		return componentefinancieroServiceMapper;
	}

	public void setComponentefinancieroServiceMapper(ComponentefinancieroServiceMapper componentefinancieroServiceMapper) {
		this.componentefinancieroServiceMapper = componentefinancieroServiceMapper;
	}

}
