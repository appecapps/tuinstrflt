/*
 * Created on 28 ago 2017 ( Time 17:51:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Destinohorario;
import com.tuin.bean.jpa.DestinohorarioEntity;
import java.math.BigDecimal;
import java.util.List;
import com.tuin.business.service.DestinohorarioService;
import com.tuin.business.service.mapping.DestinohorarioServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.DestinohorarioPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of DestinohorarioService
 */
@Component
public class DestinohorarioServiceImpl implements DestinohorarioService {

	private DestinohorarioPersistence destinohorarioPersistence;

	@Resource
	private DestinohorarioServiceMapper destinohorarioServiceMapper;
	
	public DestinohorarioServiceImpl() {
		destinohorarioPersistence = PersistenceServiceProvider.getService(DestinohorarioPersistence.class);
	}
		
	@Override
	public Destinohorario findById(Long id) {
		DestinohorarioEntity entity = destinohorarioPersistence.load(id);
		return destinohorarioServiceMapper.mapDestinohorarioEntityToDestinohorario(entity);
	}

	@Override
	public List<Destinohorario> findAll() {
		List<DestinohorarioEntity> entities = destinohorarioPersistence.loadAll();
		List<Destinohorario> beans = new ArrayList<Destinohorario>();
		for(DestinohorarioEntity entity : entities) {
			beans.add(destinohorarioServiceMapper.mapDestinohorarioEntityToDestinohorario(entity));
		}
		return beans;
	}

	@Override
	public Destinohorario save(Destinohorario destinohorario) {
		return update(destinohorario) ;
	}

	@Override
	public Destinohorario create(Destinohorario destinohorario) {
		if(destinohorarioPersistence.load(destinohorario.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		DestinohorarioEntity destinohorarioEntity = new DestinohorarioEntity();
		destinohorarioServiceMapper.mapDestinohorarioToDestinohorarioEntity(destinohorario, destinohorarioEntity);
		DestinohorarioEntity destinohorarioEntitySaved = destinohorarioPersistence.save(destinohorarioEntity);
		return destinohorarioServiceMapper.mapDestinohorarioEntityToDestinohorario(destinohorarioEntitySaved);
	}

	@Override
	public Destinohorario update(Destinohorario destinohorario) {
		DestinohorarioEntity destinohorarioEntity = destinohorarioPersistence.load(destinohorario.getId());
		destinohorarioServiceMapper.mapDestinohorarioToDestinohorarioEntity(destinohorario, destinohorarioEntity);
		DestinohorarioEntity destinohorarioEntitySaved = destinohorarioPersistence.save(destinohorarioEntity);
		return destinohorarioServiceMapper.mapDestinohorarioEntityToDestinohorario(destinohorarioEntitySaved);
	}

	@Override
	public void delete(Long id) {
		destinohorarioPersistence.delete(id);
	}

	public DestinohorarioPersistence getDestinohorarioPersistence() {
		return destinohorarioPersistence;
	}

	public void setDestinohorarioPersistence(DestinohorarioPersistence destinohorarioPersistence) {
		this.destinohorarioPersistence = destinohorarioPersistence;
	}

	public DestinohorarioServiceMapper getDestinohorarioServiceMapper() {
		return destinohorarioServiceMapper;
	}

	public void setDestinohorarioServiceMapper(DestinohorarioServiceMapper destinohorarioServiceMapper) {
		this.destinohorarioServiceMapper = destinohorarioServiceMapper;
	}

}
