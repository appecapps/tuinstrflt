/*
 * Created on 28 ago 2017 ( Time 17:51:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Entidadrol;
import com.tuin.bean.jpa.EntidadrolEntity;
import com.tuin.business.service.EntidadrolService;
import com.tuin.business.service.mapping.EntidadrolServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.EntidadrolPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of EntidadrolService
 */
@Component
public class EntidadrolServiceImpl implements EntidadrolService {

	private EntidadrolPersistence entidadrolPersistence;

	@Resource
	private EntidadrolServiceMapper entidadrolServiceMapper;
	
	public EntidadrolServiceImpl() {
		entidadrolPersistence = PersistenceServiceProvider.getService(EntidadrolPersistence.class);
	}
		
	@Override
	public Entidadrol findById(Long id) {
		EntidadrolEntity entity = entidadrolPersistence.load(id);
		return entidadrolServiceMapper.mapEntidadrolEntityToEntidadrol(entity);
	}

	@Override
	public List<Entidadrol> findAll() {
		List<EntidadrolEntity> entities = entidadrolPersistence.loadAll();
		List<Entidadrol> beans = new ArrayList<Entidadrol>();
		for(EntidadrolEntity entity : entities) {
			beans.add(entidadrolServiceMapper.mapEntidadrolEntityToEntidadrol(entity));
		}
		return beans;
	}

	@Override
	public Entidadrol save(Entidadrol entidadrol) {
		return update(entidadrol) ;
	}

	@Override
	public Entidadrol create(Entidadrol entidadrol) {
		if(entidadrolPersistence.load(entidadrol.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		EntidadrolEntity entidadrolEntity = new EntidadrolEntity();
		entidadrolServiceMapper.mapEntidadrolToEntidadrolEntity(entidadrol, entidadrolEntity);
		EntidadrolEntity entidadrolEntitySaved = entidadrolPersistence.save(entidadrolEntity);
		return entidadrolServiceMapper.mapEntidadrolEntityToEntidadrol(entidadrolEntitySaved);
	}

	@Override
	public Entidadrol update(Entidadrol entidadrol) {
		EntidadrolEntity entidadrolEntity = entidadrolPersistence.load(entidadrol.getId());
		entidadrolServiceMapper.mapEntidadrolToEntidadrolEntity(entidadrol, entidadrolEntity);
		EntidadrolEntity entidadrolEntitySaved = entidadrolPersistence.save(entidadrolEntity);
		return entidadrolServiceMapper.mapEntidadrolEntityToEntidadrol(entidadrolEntitySaved);
	}

	@Override
	public void delete(Long id) {
		entidadrolPersistence.delete(id);
	}

	public EntidadrolPersistence getEntidadrolPersistence() {
		return entidadrolPersistence;
	}

	public void setEntidadrolPersistence(EntidadrolPersistence entidadrolPersistence) {
		this.entidadrolPersistence = entidadrolPersistence;
	}

	public EntidadrolServiceMapper getEntidadrolServiceMapper() {
		return entidadrolServiceMapper;
	}

	public void setEntidadrolServiceMapper(EntidadrolServiceMapper entidadrolServiceMapper) {
		this.entidadrolServiceMapper = entidadrolServiceMapper;
	}

}
