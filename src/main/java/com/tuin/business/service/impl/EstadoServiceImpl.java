/*
 * Created on 28 ago 2017 ( Time 17:51:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Estado;
import com.tuin.bean.jpa.EstadoEntity;
import java.util.List;
import com.tuin.business.service.EstadoService;
import com.tuin.business.service.mapping.EstadoServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.EstadoPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of EstadoService
 */
@Component
public class EstadoServiceImpl implements EstadoService {

	private EstadoPersistence estadoPersistence;

	@Resource
	private EstadoServiceMapper estadoServiceMapper;
	
	public EstadoServiceImpl() {
		estadoPersistence = PersistenceServiceProvider.getService(EstadoPersistence.class);
	}
		
	@Override
	public Estado findById(Long id) {
		EstadoEntity entity = estadoPersistence.load(id);
		return estadoServiceMapper.mapEstadoEntityToEstado(entity);
	}

	@Override
	public List<Estado> findAll() {
		List<EstadoEntity> entities = estadoPersistence.loadAll();
		List<Estado> beans = new ArrayList<Estado>();
		for(EstadoEntity entity : entities) {
			beans.add(estadoServiceMapper.mapEstadoEntityToEstado(entity));
		}
		return beans;
	}

	@Override
	public Estado save(Estado estado) {
		return update(estado) ;
	}

	@Override
	public Estado create(Estado estado) {
		if(estadoPersistence.load(estado.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		EstadoEntity estadoEntity = new EstadoEntity();
		estadoServiceMapper.mapEstadoToEstadoEntity(estado, estadoEntity);
		EstadoEntity estadoEntitySaved = estadoPersistence.save(estadoEntity);
		return estadoServiceMapper.mapEstadoEntityToEstado(estadoEntitySaved);
	}

	@Override
	public Estado update(Estado estado) {
		EstadoEntity estadoEntity = estadoPersistence.load(estado.getId());
		estadoServiceMapper.mapEstadoToEstadoEntity(estado, estadoEntity);
		EstadoEntity estadoEntitySaved = estadoPersistence.save(estadoEntity);
		return estadoServiceMapper.mapEstadoEntityToEstado(estadoEntitySaved);
	}

	@Override
	public void delete(Long id) {
		estadoPersistence.delete(id);
	}

	public EstadoPersistence getEstadoPersistence() {
		return estadoPersistence;
	}

	public void setEstadoPersistence(EstadoPersistence estadoPersistence) {
		this.estadoPersistence = estadoPersistence;
	}

	public EstadoServiceMapper getEstadoServiceMapper() {
		return estadoServiceMapper;
	}

	public void setEstadoServiceMapper(EstadoServiceMapper estadoServiceMapper) {
		this.estadoServiceMapper = estadoServiceMapper;
	}

}
