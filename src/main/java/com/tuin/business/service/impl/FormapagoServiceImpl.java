/*
 * Created on 28 ago 2017 ( Time 17:51:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Formapago;
import com.tuin.bean.jpa.FormapagoEntity;
import java.util.List;
import com.tuin.business.service.FormapagoService;
import com.tuin.business.service.mapping.FormapagoServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.FormapagoPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of FormapagoService
 */
@Component
public class FormapagoServiceImpl implements FormapagoService {

	private FormapagoPersistence formapagoPersistence;

	@Resource
	private FormapagoServiceMapper formapagoServiceMapper;
	
	public FormapagoServiceImpl() {
		formapagoPersistence = PersistenceServiceProvider.getService(FormapagoPersistence.class);
	}
		
	@Override
	public Formapago findById(Long id) {
		FormapagoEntity entity = formapagoPersistence.load(id);
		return formapagoServiceMapper.mapFormapagoEntityToFormapago(entity);
	}

	@Override
	public List<Formapago> findAll() {
		List<FormapagoEntity> entities = formapagoPersistence.loadAll();
		List<Formapago> beans = new ArrayList<Formapago>();
		for(FormapagoEntity entity : entities) {
			beans.add(formapagoServiceMapper.mapFormapagoEntityToFormapago(entity));
		}
		return beans;
	}

	@Override
	public Formapago save(Formapago formapago) {
		return update(formapago) ;
	}

	@Override
	public Formapago create(Formapago formapago) {
		if(formapagoPersistence.load(formapago.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		FormapagoEntity formapagoEntity = new FormapagoEntity();
		formapagoServiceMapper.mapFormapagoToFormapagoEntity(formapago, formapagoEntity);
		FormapagoEntity formapagoEntitySaved = formapagoPersistence.save(formapagoEntity);
		return formapagoServiceMapper.mapFormapagoEntityToFormapago(formapagoEntitySaved);
	}

	@Override
	public Formapago update(Formapago formapago) {
		FormapagoEntity formapagoEntity = formapagoPersistence.load(formapago.getId());
		formapagoServiceMapper.mapFormapagoToFormapagoEntity(formapago, formapagoEntity);
		FormapagoEntity formapagoEntitySaved = formapagoPersistence.save(formapagoEntity);
		return formapagoServiceMapper.mapFormapagoEntityToFormapago(formapagoEntitySaved);
	}

	@Override
	public void delete(Long id) {
		formapagoPersistence.delete(id);
	}

	public FormapagoPersistence getFormapagoPersistence() {
		return formapagoPersistence;
	}

	public void setFormapagoPersistence(FormapagoPersistence formapagoPersistence) {
		this.formapagoPersistence = formapagoPersistence;
	}

	public FormapagoServiceMapper getFormapagoServiceMapper() {
		return formapagoServiceMapper;
	}

	public void setFormapagoServiceMapper(FormapagoServiceMapper formapagoServiceMapper) {
		this.formapagoServiceMapper = formapagoServiceMapper;
	}

}
