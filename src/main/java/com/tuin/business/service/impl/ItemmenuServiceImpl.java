/*
 * Created on 28 ago 2017 ( Time 17:51:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Itemmenu;
import com.tuin.bean.jpa.ItemmenuEntity;
import java.util.List;
import com.tuin.business.service.ItemmenuService;
import com.tuin.business.service.mapping.ItemmenuServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ItemmenuPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ItemmenuService
 */
@Component
public class ItemmenuServiceImpl implements ItemmenuService {

	private ItemmenuPersistence itemmenuPersistence;

	@Resource
	private ItemmenuServiceMapper itemmenuServiceMapper;
	
	public ItemmenuServiceImpl() {
		itemmenuPersistence = PersistenceServiceProvider.getService(ItemmenuPersistence.class);
	}
		
	@Override
	public Itemmenu findById(Long id) {
		ItemmenuEntity entity = itemmenuPersistence.load(id);
		return itemmenuServiceMapper.mapItemmenuEntityToItemmenu(entity);
	}

	@Override
	public List<Itemmenu> findAll() {
		List<ItemmenuEntity> entities = itemmenuPersistence.loadAll();
		List<Itemmenu> beans = new ArrayList<Itemmenu>();
		for(ItemmenuEntity entity : entities) {
			beans.add(itemmenuServiceMapper.mapItemmenuEntityToItemmenu(entity));
		}
		return beans;
	}

	@Override
	public Itemmenu save(Itemmenu itemmenu) {
		return update(itemmenu) ;
	}

	@Override
	public Itemmenu create(Itemmenu itemmenu) {
		if(itemmenuPersistence.load(itemmenu.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ItemmenuEntity itemmenuEntity = new ItemmenuEntity();
		itemmenuServiceMapper.mapItemmenuToItemmenuEntity(itemmenu, itemmenuEntity);
		ItemmenuEntity itemmenuEntitySaved = itemmenuPersistence.save(itemmenuEntity);
		return itemmenuServiceMapper.mapItemmenuEntityToItemmenu(itemmenuEntitySaved);
	}

	@Override
	public Itemmenu update(Itemmenu itemmenu) {
		ItemmenuEntity itemmenuEntity = itemmenuPersistence.load(itemmenu.getId());
		itemmenuServiceMapper.mapItemmenuToItemmenuEntity(itemmenu, itemmenuEntity);
		ItemmenuEntity itemmenuEntitySaved = itemmenuPersistence.save(itemmenuEntity);
		return itemmenuServiceMapper.mapItemmenuEntityToItemmenu(itemmenuEntitySaved);
	}

	@Override
	public void delete(Long id) {
		itemmenuPersistence.delete(id);
	}

	public ItemmenuPersistence getItemmenuPersistence() {
		return itemmenuPersistence;
	}

	public void setItemmenuPersistence(ItemmenuPersistence itemmenuPersistence) {
		this.itemmenuPersistence = itemmenuPersistence;
	}

	public ItemmenuServiceMapper getItemmenuServiceMapper() {
		return itemmenuServiceMapper;
	}

	public void setItemmenuServiceMapper(ItemmenuServiceMapper itemmenuServiceMapper) {
		this.itemmenuServiceMapper = itemmenuServiceMapper;
	}

}
