/*
 * Created on 28 ago 2017 ( Time 17:51:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Modelo;
import com.tuin.bean.jpa.ModeloEntity;
import java.util.List;
import com.tuin.business.service.ModeloService;
import com.tuin.business.service.mapping.ModeloServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ModeloPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ModeloService
 */
@Component
public class ModeloServiceImpl implements ModeloService {

	private ModeloPersistence modeloPersistence;

	@Resource
	private ModeloServiceMapper modeloServiceMapper;
	
	public ModeloServiceImpl() {
		modeloPersistence = PersistenceServiceProvider.getService(ModeloPersistence.class);
	}
		
	@Override
	public Modelo findById(Long id) {
		ModeloEntity entity = modeloPersistence.load(id);
		return modeloServiceMapper.mapModeloEntityToModelo(entity);
	}

	@Override
	public List<Modelo> findAll() {
		List<ModeloEntity> entities = modeloPersistence.loadAll();
		List<Modelo> beans = new ArrayList<Modelo>();
		for(ModeloEntity entity : entities) {
			beans.add(modeloServiceMapper.mapModeloEntityToModelo(entity));
		}
		return beans;
	}

	@Override
	public Modelo save(Modelo modelo) {
		return update(modelo) ;
	}

	@Override
	public Modelo create(Modelo modelo) {
		if(modeloPersistence.load(modelo.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ModeloEntity modeloEntity = new ModeloEntity();
		modeloServiceMapper.mapModeloToModeloEntity(modelo, modeloEntity);
		ModeloEntity modeloEntitySaved = modeloPersistence.save(modeloEntity);
		return modeloServiceMapper.mapModeloEntityToModelo(modeloEntitySaved);
	}

	@Override
	public Modelo update(Modelo modelo) {
		ModeloEntity modeloEntity = modeloPersistence.load(modelo.getId());
		modeloServiceMapper.mapModeloToModeloEntity(modelo, modeloEntity);
		ModeloEntity modeloEntitySaved = modeloPersistence.save(modeloEntity);
		return modeloServiceMapper.mapModeloEntityToModelo(modeloEntitySaved);
	}

	@Override
	public void delete(Long id) {
		modeloPersistence.delete(id);
	}

	public ModeloPersistence getModeloPersistence() {
		return modeloPersistence;
	}

	public void setModeloPersistence(ModeloPersistence modeloPersistence) {
		this.modeloPersistence = modeloPersistence;
	}

	public ModeloServiceMapper getModeloServiceMapper() {
		return modeloServiceMapper;
	}

	public void setModeloServiceMapper(ModeloServiceMapper modeloServiceMapper) {
		this.modeloServiceMapper = modeloServiceMapper;
	}

}
