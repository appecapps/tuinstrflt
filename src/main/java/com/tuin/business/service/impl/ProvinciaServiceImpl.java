/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Provincia;
import com.tuin.bean.jpa.ProvinciaEntity;
import java.util.List;
import com.tuin.business.service.ProvinciaService;
import com.tuin.business.service.mapping.ProvinciaServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ProvinciaPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ProvinciaService
 */
@Component
public class ProvinciaServiceImpl implements ProvinciaService {

	private ProvinciaPersistence provinciaPersistence;

	@Resource
	private ProvinciaServiceMapper provinciaServiceMapper;
	
	public ProvinciaServiceImpl() {
		provinciaPersistence = PersistenceServiceProvider.getService(ProvinciaPersistence.class);
	}
		
	@Override
	public Provincia findById(Long id) {
		ProvinciaEntity entity = provinciaPersistence.load(id);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(entity);
	}

	@Override
	public List<Provincia> findAll() {
		List<ProvinciaEntity> entities = provinciaPersistence.loadAll();
		List<Provincia> beans = new ArrayList<Provincia>();
		for(ProvinciaEntity entity : entities) {
			beans.add(provinciaServiceMapper.mapProvinciaEntityToProvincia(entity));
		}
		return beans;
	}

	@Override
	public Provincia save(Provincia provincia) {
		return update(provincia) ;
	}

	@Override
	public Provincia create(Provincia provincia) {
		if(provinciaPersistence.load(provincia.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ProvinciaEntity provinciaEntity = new ProvinciaEntity();
		provinciaServiceMapper.mapProvinciaToProvinciaEntity(provincia, provinciaEntity);
		ProvinciaEntity provinciaEntitySaved = provinciaPersistence.save(provinciaEntity);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntitySaved);
	}

	@Override
	public Provincia update(Provincia provincia) {
		ProvinciaEntity provinciaEntity = provinciaPersistence.load(provincia.getId());
		provinciaServiceMapper.mapProvinciaToProvinciaEntity(provincia, provinciaEntity);
		ProvinciaEntity provinciaEntitySaved = provinciaPersistence.save(provinciaEntity);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntitySaved);
	}

	@Override
	public void delete(Long id) {
		provinciaPersistence.delete(id);
	}

	public ProvinciaPersistence getProvinciaPersistence() {
		return provinciaPersistence;
	}

	public void setProvinciaPersistence(ProvinciaPersistence provinciaPersistence) {
		this.provinciaPersistence = provinciaPersistence;
	}

	public ProvinciaServiceMapper getProvinciaServiceMapper() {
		return provinciaServiceMapper;
	}

	public void setProvinciaServiceMapper(ProvinciaServiceMapper provinciaServiceMapper) {
		this.provinciaServiceMapper = provinciaServiceMapper;
	}

}
