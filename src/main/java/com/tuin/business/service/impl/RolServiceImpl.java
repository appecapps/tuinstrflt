/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Rol;
import com.tuin.bean.jpa.RolEntity;
import java.util.List;
import com.tuin.business.service.RolService;
import com.tuin.business.service.mapping.RolServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.RolPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of RolService
 */
@Component
public class RolServiceImpl implements RolService {

	private RolPersistence rolPersistence;

	@Resource
	private RolServiceMapper rolServiceMapper;
	
	public RolServiceImpl() {
		rolPersistence = PersistenceServiceProvider.getService(RolPersistence.class);
	}
		
	@Override
	public Rol findById(Long id) {
		RolEntity entity = rolPersistence.load(id);
		return rolServiceMapper.mapRolEntityToRol(entity);
	}

	@Override
	public List<Rol> findAll() {
		List<RolEntity> entities = rolPersistence.loadAll();
		List<Rol> beans = new ArrayList<Rol>();
		for(RolEntity entity : entities) {
			beans.add(rolServiceMapper.mapRolEntityToRol(entity));
		}
		return beans;
	}

	@Override
	public Rol save(Rol rol) {
		return update(rol) ;
	}

	@Override
	public Rol create(Rol rol) {
		if(rolPersistence.load(rol.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		RolEntity rolEntity = new RolEntity();
		rolServiceMapper.mapRolToRolEntity(rol, rolEntity);
		RolEntity rolEntitySaved = rolPersistence.save(rolEntity);
		return rolServiceMapper.mapRolEntityToRol(rolEntitySaved);
	}

	@Override
	public Rol update(Rol rol) {
		RolEntity rolEntity = rolPersistence.load(rol.getId());
		rolServiceMapper.mapRolToRolEntity(rol, rolEntity);
		RolEntity rolEntitySaved = rolPersistence.save(rolEntity);
		return rolServiceMapper.mapRolEntityToRol(rolEntitySaved);
	}

	@Override
	public void delete(Long id) {
		rolPersistence.delete(id);
	}

	public RolPersistence getRolPersistence() {
		return rolPersistence;
	}

	public void setRolPersistence(RolPersistence rolPersistence) {
		this.rolPersistence = rolPersistence;
	}

	public RolServiceMapper getRolServiceMapper() {
		return rolServiceMapper;
	}

	public void setRolServiceMapper(RolServiceMapper rolServiceMapper) {
		this.rolServiceMapper = rolServiceMapper;
	}

}
