/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Rolitemmenu;
import com.tuin.bean.jpa.RolitemmenuEntity;
import com.tuin.business.service.RolitemmenuService;
import com.tuin.business.service.mapping.RolitemmenuServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.RolitemmenuPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of RolitemmenuService
 */
@Component
public class RolitemmenuServiceImpl implements RolitemmenuService {

	private RolitemmenuPersistence rolitemmenuPersistence;

	@Resource
	private RolitemmenuServiceMapper rolitemmenuServiceMapper;
	
	public RolitemmenuServiceImpl() {
		rolitemmenuPersistence = PersistenceServiceProvider.getService(RolitemmenuPersistence.class);
	}
		
	@Override
	public Rolitemmenu findById(Long id) {
		RolitemmenuEntity entity = rolitemmenuPersistence.load(id);
		return rolitemmenuServiceMapper.mapRolitemmenuEntityToRolitemmenu(entity);
	}

	@Override
	public List<Rolitemmenu> findAll() {
		List<RolitemmenuEntity> entities = rolitemmenuPersistence.loadAll();
		List<Rolitemmenu> beans = new ArrayList<Rolitemmenu>();
		for(RolitemmenuEntity entity : entities) {
			beans.add(rolitemmenuServiceMapper.mapRolitemmenuEntityToRolitemmenu(entity));
		}
		return beans;
	}

	@Override
	public Rolitemmenu save(Rolitemmenu rolitemmenu) {
		return update(rolitemmenu) ;
	}

	@Override
	public Rolitemmenu create(Rolitemmenu rolitemmenu) {
		if(rolitemmenuPersistence.load(rolitemmenu.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		RolitemmenuEntity rolitemmenuEntity = new RolitemmenuEntity();
		rolitemmenuServiceMapper.mapRolitemmenuToRolitemmenuEntity(rolitemmenu, rolitemmenuEntity);
		RolitemmenuEntity rolitemmenuEntitySaved = rolitemmenuPersistence.save(rolitemmenuEntity);
		return rolitemmenuServiceMapper.mapRolitemmenuEntityToRolitemmenu(rolitemmenuEntitySaved);
	}

	@Override
	public Rolitemmenu update(Rolitemmenu rolitemmenu) {
		RolitemmenuEntity rolitemmenuEntity = rolitemmenuPersistence.load(rolitemmenu.getId());
		rolitemmenuServiceMapper.mapRolitemmenuToRolitemmenuEntity(rolitemmenu, rolitemmenuEntity);
		RolitemmenuEntity rolitemmenuEntitySaved = rolitemmenuPersistence.save(rolitemmenuEntity);
		return rolitemmenuServiceMapper.mapRolitemmenuEntityToRolitemmenu(rolitemmenuEntitySaved);
	}

	@Override
	public void delete(Long id) {
		rolitemmenuPersistence.delete(id);
	}

	public RolitemmenuPersistence getRolitemmenuPersistence() {
		return rolitemmenuPersistence;
	}

	public void setRolitemmenuPersistence(RolitemmenuPersistence rolitemmenuPersistence) {
		this.rolitemmenuPersistence = rolitemmenuPersistence;
	}

	public RolitemmenuServiceMapper getRolitemmenuServiceMapper() {
		return rolitemmenuServiceMapper;
	}

	public void setRolitemmenuServiceMapper(RolitemmenuServiceMapper rolitemmenuServiceMapper) {
		this.rolitemmenuServiceMapper = rolitemmenuServiceMapper;
	}

}
