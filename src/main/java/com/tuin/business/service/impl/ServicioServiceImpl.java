/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Servicio;
import com.tuin.bean.jpa.ServicioEntity;
import java.util.List;
import com.tuin.business.service.ServicioService;
import com.tuin.business.service.mapping.ServicioServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.ServicioPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of ServicioService
 */
@Component
public class ServicioServiceImpl implements ServicioService {

	private ServicioPersistence servicioPersistence;

	@Resource
	private ServicioServiceMapper servicioServiceMapper;
	
	public ServicioServiceImpl() {
		servicioPersistence = PersistenceServiceProvider.getService(ServicioPersistence.class);
	}
		
	@Override
	public Servicio findById(Long id) {
		ServicioEntity entity = servicioPersistence.load(id);
		return servicioServiceMapper.mapServicioEntityToServicio(entity);
	}

	@Override
	public List<Servicio> findAll() {
		List<ServicioEntity> entities = servicioPersistence.loadAll();
		List<Servicio> beans = new ArrayList<Servicio>();
		for(ServicioEntity entity : entities) {
			beans.add(servicioServiceMapper.mapServicioEntityToServicio(entity));
		}
		return beans;
	}

	@Override
	public Servicio save(Servicio servicio) {
		return update(servicio) ;
	}

	@Override
	public Servicio create(Servicio servicio) {
		if(servicioPersistence.load(servicio.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		ServicioEntity servicioEntity = new ServicioEntity();
		servicioServiceMapper.mapServicioToServicioEntity(servicio, servicioEntity);
		ServicioEntity servicioEntitySaved = servicioPersistence.save(servicioEntity);
		return servicioServiceMapper.mapServicioEntityToServicio(servicioEntitySaved);
	}

	@Override
	public Servicio update(Servicio servicio) {
		ServicioEntity servicioEntity = servicioPersistence.load(servicio.getId());
		servicioServiceMapper.mapServicioToServicioEntity(servicio, servicioEntity);
		ServicioEntity servicioEntitySaved = servicioPersistence.save(servicioEntity);
		return servicioServiceMapper.mapServicioEntityToServicio(servicioEntitySaved);
	}

	@Override
	public void delete(Long id) {
		servicioPersistence.delete(id);
	}

	public ServicioPersistence getServicioPersistence() {
		return servicioPersistence;
	}

	public void setServicioPersistence(ServicioPersistence servicioPersistence) {
		this.servicioPersistence = servicioPersistence;
	}

	public ServicioServiceMapper getServicioServiceMapper() {
		return servicioServiceMapper;
	}

	public void setServicioServiceMapper(ServicioServiceMapper servicioServiceMapper) {
		this.servicioServiceMapper = servicioServiceMapper;
	}

}
