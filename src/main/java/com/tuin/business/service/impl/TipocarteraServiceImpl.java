/*
 * Created on 28 ago 2017 ( Time 17:51:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Tipocartera;
import com.tuin.bean.jpa.TipocarteraEntity;
import java.util.List;
import com.tuin.business.service.TipocarteraService;
import com.tuin.business.service.mapping.TipocarteraServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.TipocarteraPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of TipocarteraService
 */
@Component
public class TipocarteraServiceImpl implements TipocarteraService {

	private TipocarteraPersistence tipocarteraPersistence;

	@Resource
	private TipocarteraServiceMapper tipocarteraServiceMapper;
	
	public TipocarteraServiceImpl() {
		tipocarteraPersistence = PersistenceServiceProvider.getService(TipocarteraPersistence.class);
	}
		
	@Override
	public Tipocartera findById(Long id) {
		TipocarteraEntity entity = tipocarteraPersistence.load(id);
		return tipocarteraServiceMapper.mapTipocarteraEntityToTipocartera(entity);
	}

	@Override
	public List<Tipocartera> findAll() {
		List<TipocarteraEntity> entities = tipocarteraPersistence.loadAll();
		List<Tipocartera> beans = new ArrayList<Tipocartera>();
		for(TipocarteraEntity entity : entities) {
			beans.add(tipocarteraServiceMapper.mapTipocarteraEntityToTipocartera(entity));
		}
		return beans;
	}

	@Override
	public Tipocartera save(Tipocartera tipocartera) {
		return update(tipocartera) ;
	}

	@Override
	public Tipocartera create(Tipocartera tipocartera) {
		if(tipocarteraPersistence.load(tipocartera.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		TipocarteraEntity tipocarteraEntity = new TipocarteraEntity();
		tipocarteraServiceMapper.mapTipocarteraToTipocarteraEntity(tipocartera, tipocarteraEntity);
		TipocarteraEntity tipocarteraEntitySaved = tipocarteraPersistence.save(tipocarteraEntity);
		return tipocarteraServiceMapper.mapTipocarteraEntityToTipocartera(tipocarteraEntitySaved);
	}

	@Override
	public Tipocartera update(Tipocartera tipocartera) {
		TipocarteraEntity tipocarteraEntity = tipocarteraPersistence.load(tipocartera.getId());
		tipocarteraServiceMapper.mapTipocarteraToTipocarteraEntity(tipocartera, tipocarteraEntity);
		TipocarteraEntity tipocarteraEntitySaved = tipocarteraPersistence.save(tipocarteraEntity);
		return tipocarteraServiceMapper.mapTipocarteraEntityToTipocartera(tipocarteraEntitySaved);
	}

	@Override
	public void delete(Long id) {
		tipocarteraPersistence.delete(id);
	}

	public TipocarteraPersistence getTipocarteraPersistence() {
		return tipocarteraPersistence;
	}

	public void setTipocarteraPersistence(TipocarteraPersistence tipocarteraPersistence) {
		this.tipocarteraPersistence = tipocarteraPersistence;
	}

	public TipocarteraServiceMapper getTipocarteraServiceMapper() {
		return tipocarteraServiceMapper;
	}

	public void setTipocarteraServiceMapper(TipocarteraServiceMapper tipocarteraServiceMapper) {
		this.tipocarteraServiceMapper = tipocarteraServiceMapper;
	}

}
