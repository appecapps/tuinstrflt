/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.tuin.bean.Vehiculoservicio;
import com.tuin.bean.jpa.VehiculoservicioEntity;
import java.util.List;
import com.tuin.business.service.VehiculoservicioService;
import com.tuin.business.service.mapping.VehiculoservicioServiceMapper;
import com.tuin.persistence.PersistenceServiceProvider;
import com.tuin.persistence.services.VehiculoservicioPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of VehiculoservicioService
 */
@Component
public class VehiculoservicioServiceImpl implements VehiculoservicioService {

	private VehiculoservicioPersistence vehiculoservicioPersistence;

	@Resource
	private VehiculoservicioServiceMapper vehiculoservicioServiceMapper;
	
	public VehiculoservicioServiceImpl() {
		vehiculoservicioPersistence = PersistenceServiceProvider.getService(VehiculoservicioPersistence.class);
	}
		
	@Override
	public Vehiculoservicio findById(Long id) {
		VehiculoservicioEntity entity = vehiculoservicioPersistence.load(id);
		return vehiculoservicioServiceMapper.mapVehiculoservicioEntityToVehiculoservicio(entity);
	}

	@Override
	public List<Vehiculoservicio> findAll() {
		List<VehiculoservicioEntity> entities = vehiculoservicioPersistence.loadAll();
		List<Vehiculoservicio> beans = new ArrayList<Vehiculoservicio>();
		for(VehiculoservicioEntity entity : entities) {
			beans.add(vehiculoservicioServiceMapper.mapVehiculoservicioEntityToVehiculoservicio(entity));
		}
		return beans;
	}

	@Override
	public Vehiculoservicio save(Vehiculoservicio vehiculoservicio) {
		return update(vehiculoservicio) ;
	}

	@Override
	public Vehiculoservicio create(Vehiculoservicio vehiculoservicio) {
		if(vehiculoservicioPersistence.load(vehiculoservicio.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		VehiculoservicioEntity vehiculoservicioEntity = new VehiculoservicioEntity();
		vehiculoservicioServiceMapper.mapVehiculoservicioToVehiculoservicioEntity(vehiculoservicio, vehiculoservicioEntity);
		VehiculoservicioEntity vehiculoservicioEntitySaved = vehiculoservicioPersistence.save(vehiculoservicioEntity);
		return vehiculoservicioServiceMapper.mapVehiculoservicioEntityToVehiculoservicio(vehiculoservicioEntitySaved);
	}

	@Override
	public Vehiculoservicio update(Vehiculoservicio vehiculoservicio) {
		VehiculoservicioEntity vehiculoservicioEntity = vehiculoservicioPersistence.load(vehiculoservicio.getId());
		vehiculoservicioServiceMapper.mapVehiculoservicioToVehiculoservicioEntity(vehiculoservicio, vehiculoservicioEntity);
		VehiculoservicioEntity vehiculoservicioEntitySaved = vehiculoservicioPersistence.save(vehiculoservicioEntity);
		return vehiculoservicioServiceMapper.mapVehiculoservicioEntityToVehiculoservicio(vehiculoservicioEntitySaved);
	}

	@Override
	public void delete(Long id) {
		vehiculoservicioPersistence.delete(id);
	}

	public VehiculoservicioPersistence getVehiculoservicioPersistence() {
		return vehiculoservicioPersistence;
	}

	public void setVehiculoservicioPersistence(VehiculoservicioPersistence vehiculoservicioPersistence) {
		this.vehiculoservicioPersistence = vehiculoservicioPersistence;
	}

	public VehiculoservicioServiceMapper getVehiculoservicioServiceMapper() {
		return vehiculoservicioServiceMapper;
	}

	public void setVehiculoservicioServiceMapper(VehiculoservicioServiceMapper vehiculoservicioServiceMapper) {
		this.vehiculoservicioServiceMapper = vehiculoservicioServiceMapper;
	}

}
