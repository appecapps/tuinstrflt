/*
 * Created on 28 ago 2017 ( Time 17:51:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Componentedocumento;
import com.tuin.bean.jpa.ComponentedocumentoEntity;
import com.tuin.bean.jpa.ComponentefinancieroEntity;
import com.tuin.bean.jpa.DocumentoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ComponentedocumentoServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ComponentedocumentoServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ComponentedocumentoEntity' to 'Componentedocumento'
	 * @param componentedocumentoEntity
	 */
	public Componentedocumento mapComponentedocumentoEntityToComponentedocumento(ComponentedocumentoEntity componentedocumentoEntity) {
		if(componentedocumentoEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Componentedocumento componentedocumento = map(componentedocumentoEntity, Componentedocumento.class);

		//--- Link mapping ( link to Componentefinanciero )
		if(componentedocumentoEntity.getComponentefinanciero() != null) {
			componentedocumento.setComponentefinancieroid(componentedocumentoEntity.getComponentefinanciero().getId());
		}
		//--- Link mapping ( link to Documento )
		if(componentedocumentoEntity.getDocumento() != null) {
			componentedocumento.setDocumentoid(componentedocumentoEntity.getDocumento().getId());
		}
		return componentedocumento;
	}
	
	/**
	 * Mapping from 'Componentedocumento' to 'ComponentedocumentoEntity'
	 * @param componentedocumento
	 * @param componentedocumentoEntity
	 */
	public void mapComponentedocumentoToComponentedocumentoEntity(Componentedocumento componentedocumento, ComponentedocumentoEntity componentedocumentoEntity) {
		if(componentedocumento == null) {
			return;
		}

		//--- Generic mapping 
		map(componentedocumento, componentedocumentoEntity);

		//--- Link mapping ( link : componentedocumento )
		if( hasLinkToComponentefinanciero(componentedocumento) ) {
			ComponentefinancieroEntity componentefinanciero1 = new ComponentefinancieroEntity();
			componentefinanciero1.setId( componentedocumento.getComponentefinancieroid() );
			componentedocumentoEntity.setComponentefinanciero( componentefinanciero1 );
		} else {
			componentedocumentoEntity.setComponentefinanciero( null );
		}

		//--- Link mapping ( link : componentedocumento )
		if( hasLinkToDocumento(componentedocumento) ) {
			DocumentoEntity documento2 = new DocumentoEntity();
			documento2.setId( componentedocumento.getDocumentoid() );
			componentedocumentoEntity.setDocumento( documento2 );
		} else {
			componentedocumentoEntity.setDocumento( null );
		}

	}
	
	/**
	 * Verify that Componentefinanciero id is valid.
	 * @param Componentefinanciero Componentefinanciero
	 * @return boolean
	 */
	private boolean hasLinkToComponentefinanciero(Componentedocumento componentedocumento) {
		if(componentedocumento.getComponentefinancieroid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Documento id is valid.
	 * @param Documento Documento
	 * @return boolean
	 */
	private boolean hasLinkToDocumento(Componentedocumento componentedocumento) {
		if(componentedocumento.getDocumentoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}