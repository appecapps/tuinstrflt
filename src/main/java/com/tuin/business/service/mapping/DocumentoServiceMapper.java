/*
 * Created on 28 ago 2017 ( Time 17:51:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Documento;
import com.tuin.bean.jpa.DocumentoEntity;
import com.tuin.bean.jpa.EstadoEntity;
import com.tuin.bean.jpa.TipodocumentoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DocumentoServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DocumentoServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DocumentoEntity' to 'Documento'
	 * @param documentoEntity
	 */
	public Documento mapDocumentoEntityToDocumento(DocumentoEntity documentoEntity) {
		if(documentoEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Documento documento = map(documentoEntity, Documento.class);

		//--- Link mapping ( link to Estado )
		if(documentoEntity.getEstado() != null) {
			documento.setEstadoid(documentoEntity.getEstado().getId());
		}
		//--- Link mapping ( link to Tipodocumento )
		if(documentoEntity.getTipodocumento() != null) {
			documento.setTipodocumentoid(documentoEntity.getTipodocumento().getId());
		}
		return documento;
	}
	
	/**
	 * Mapping from 'Documento' to 'DocumentoEntity'
	 * @param documento
	 * @param documentoEntity
	 */
	public void mapDocumentoToDocumentoEntity(Documento documento, DocumentoEntity documentoEntity) {
		if(documento == null) {
			return;
		}

		//--- Generic mapping 
		map(documento, documentoEntity);

		//--- Link mapping ( link : documento )
		if( hasLinkToEstado(documento) ) {
			EstadoEntity estado1 = new EstadoEntity();
			estado1.setId( documento.getEstadoid() );
			documentoEntity.setEstado( estado1 );
		} else {
			documentoEntity.setEstado( null );
		}

		//--- Link mapping ( link : documento )
		if( hasLinkToTipodocumento(documento) ) {
			TipodocumentoEntity tipodocumento2 = new TipodocumentoEntity();
			tipodocumento2.setId( documento.getTipodocumentoid() );
			documentoEntity.setTipodocumento( tipodocumento2 );
		} else {
			documentoEntity.setTipodocumento( null );
		}

	}
	
	/**
	 * Verify that Estado id is valid.
	 * @param Estado Estado
	 * @return boolean
	 */
	private boolean hasLinkToEstado(Documento documento) {
		if(documento.getEstadoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Tipodocumento id is valid.
	 * @param Tipodocumento Tipodocumento
	 * @return boolean
	 */
	private boolean hasLinkToTipodocumento(Documento documento) {
		if(documento.getTipodocumentoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}