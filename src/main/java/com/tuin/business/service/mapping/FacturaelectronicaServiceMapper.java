/*
 * Created on 28 ago 2017 ( Time 17:51:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Facturaelectronica;
import com.tuin.bean.jpa.FacturaelectronicaEntity;
import com.tuin.bean.jpa.EstadoEntity;
import com.tuin.bean.jpa.DocumentoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class FacturaelectronicaServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public FacturaelectronicaServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'FacturaelectronicaEntity' to 'Facturaelectronica'
	 * @param facturaelectronicaEntity
	 */
	public Facturaelectronica mapFacturaelectronicaEntityToFacturaelectronica(FacturaelectronicaEntity facturaelectronicaEntity) {
		if(facturaelectronicaEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Facturaelectronica facturaelectronica = map(facturaelectronicaEntity, Facturaelectronica.class);

		//--- Link mapping ( link to Estado )
		if(facturaelectronicaEntity.getEstado() != null) {
			facturaelectronica.setEstadoid(facturaelectronicaEntity.getEstado().getId());
		}
		//--- Link mapping ( link to Documento )
		if(facturaelectronicaEntity.getDocumento() != null) {
			facturaelectronica.setDocumentoid(facturaelectronicaEntity.getDocumento().getId());
		}
		return facturaelectronica;
	}
	
	/**
	 * Mapping from 'Facturaelectronica' to 'FacturaelectronicaEntity'
	 * @param facturaelectronica
	 * @param facturaelectronicaEntity
	 */
	public void mapFacturaelectronicaToFacturaelectronicaEntity(Facturaelectronica facturaelectronica, FacturaelectronicaEntity facturaelectronicaEntity) {
		if(facturaelectronica == null) {
			return;
		}

		//--- Generic mapping 
		map(facturaelectronica, facturaelectronicaEntity);

		//--- Link mapping ( link : facturaelectronica )
		if( hasLinkToEstado(facturaelectronica) ) {
			EstadoEntity estado1 = new EstadoEntity();
			estado1.setId( facturaelectronica.getEstadoid() );
			facturaelectronicaEntity.setEstado( estado1 );
		} else {
			facturaelectronicaEntity.setEstado( null );
		}

		//--- Link mapping ( link : facturaelectronica )
		if( hasLinkToDocumento(facturaelectronica) ) {
			DocumentoEntity documento2 = new DocumentoEntity();
			documento2.setId( facturaelectronica.getDocumentoid() );
			facturaelectronicaEntity.setDocumento( documento2 );
		} else {
			facturaelectronicaEntity.setDocumento( null );
		}

	}
	
	/**
	 * Verify that Estado id is valid.
	 * @param Estado Estado
	 * @return boolean
	 */
	private boolean hasLinkToEstado(Facturaelectronica facturaelectronica) {
		if(facturaelectronica.getEstadoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Documento id is valid.
	 * @param Documento Documento
	 * @return boolean
	 */
	private boolean hasLinkToDocumento(Facturaelectronica facturaelectronica) {
		if(facturaelectronica.getDocumentoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}