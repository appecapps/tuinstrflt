/*
 * Created on 28 ago 2017 ( Time 17:51:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Formapagodocumento;
import com.tuin.bean.jpa.FormapagodocumentoEntity;
import com.tuin.bean.jpa.DocumentoEntity;
import com.tuin.bean.jpa.FormapagoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class FormapagodocumentoServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public FormapagodocumentoServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'FormapagodocumentoEntity' to 'Formapagodocumento'
	 * @param formapagodocumentoEntity
	 */
	public Formapagodocumento mapFormapagodocumentoEntityToFormapagodocumento(FormapagodocumentoEntity formapagodocumentoEntity) {
		if(formapagodocumentoEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Formapagodocumento formapagodocumento = map(formapagodocumentoEntity, Formapagodocumento.class);

		//--- Link mapping ( link to Documento )
		if(formapagodocumentoEntity.getDocumento() != null) {
			formapagodocumento.setDocumentoid(formapagodocumentoEntity.getDocumento().getId());
		}
		//--- Link mapping ( link to Formapago )
		if(formapagodocumentoEntity.getFormapago() != null) {
			formapagodocumento.setFormapagoid(formapagodocumentoEntity.getFormapago().getId());
		}
		return formapagodocumento;
	}
	
	/**
	 * Mapping from 'Formapagodocumento' to 'FormapagodocumentoEntity'
	 * @param formapagodocumento
	 * @param formapagodocumentoEntity
	 */
	public void mapFormapagodocumentoToFormapagodocumentoEntity(Formapagodocumento formapagodocumento, FormapagodocumentoEntity formapagodocumentoEntity) {
		if(formapagodocumento == null) {
			return;
		}

		//--- Generic mapping 
		map(formapagodocumento, formapagodocumentoEntity);

		//--- Link mapping ( link : formapagodocumento )
		if( hasLinkToDocumento(formapagodocumento) ) {
			DocumentoEntity documento1 = new DocumentoEntity();
			documento1.setId( formapagodocumento.getDocumentoid() );
			formapagodocumentoEntity.setDocumento( documento1 );
		} else {
			formapagodocumentoEntity.setDocumento( null );
		}

		//--- Link mapping ( link : formapagodocumento )
		if( hasLinkToFormapago(formapagodocumento) ) {
			FormapagoEntity formapago2 = new FormapagoEntity();
			formapago2.setId( formapagodocumento.getFormapagoid() );
			formapagodocumentoEntity.setFormapago( formapago2 );
		} else {
			formapagodocumentoEntity.setFormapago( null );
		}

	}
	
	/**
	 * Verify that Documento id is valid.
	 * @param Documento Documento
	 * @return boolean
	 */
	private boolean hasLinkToDocumento(Formapagodocumento formapagodocumento) {
		if(formapagodocumento.getDocumentoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Formapago id is valid.
	 * @param Formapago Formapago
	 * @return boolean
	 */
	private boolean hasLinkToFormapago(Formapagodocumento formapagodocumento) {
		if(formapagodocumento.getFormapagoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}