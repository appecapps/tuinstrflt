/*
 * Created on 28 ago 2017 ( Time 17:51:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Modelo;
import com.tuin.bean.jpa.ModeloEntity;
import com.tuin.bean.jpa.MarcaEntity;
import com.tuin.bean.jpa.TipovehiculoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ModeloServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ModeloServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ModeloEntity' to 'Modelo'
	 * @param modeloEntity
	 */
	public Modelo mapModeloEntityToModelo(ModeloEntity modeloEntity) {
		if(modeloEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Modelo modelo = map(modeloEntity, Modelo.class);

		//--- Link mapping ( link to Marca )
		if(modeloEntity.getMarca() != null) {
			modelo.setMarcaid(modeloEntity.getMarca().getId());
		}
		//--- Link mapping ( link to Tipovehiculo )
		if(modeloEntity.getTipovehiculo() != null) {
			modelo.setTipovehiculoid(modeloEntity.getTipovehiculo().getId());
		}
		return modelo;
	}
	
	/**
	 * Mapping from 'Modelo' to 'ModeloEntity'
	 * @param modelo
	 * @param modeloEntity
	 */
	public void mapModeloToModeloEntity(Modelo modelo, ModeloEntity modeloEntity) {
		if(modelo == null) {
			return;
		}

		//--- Generic mapping 
		map(modelo, modeloEntity);

		//--- Link mapping ( link : modelo )
		if( hasLinkToMarca(modelo) ) {
			MarcaEntity marca1 = new MarcaEntity();
			marca1.setId( modelo.getMarcaid() );
			modeloEntity.setMarca( marca1 );
		} else {
			modeloEntity.setMarca( null );
		}

		//--- Link mapping ( link : modelo )
		if( hasLinkToTipovehiculo(modelo) ) {
			TipovehiculoEntity tipovehiculo2 = new TipovehiculoEntity();
			tipovehiculo2.setId( modelo.getTipovehiculoid() );
			modeloEntity.setTipovehiculo( tipovehiculo2 );
		} else {
			modeloEntity.setTipovehiculo( null );
		}

	}
	
	/**
	 * Verify that Marca id is valid.
	 * @param Marca Marca
	 * @return boolean
	 */
	private boolean hasLinkToMarca(Modelo modelo) {
		if(modelo.getMarcaid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Tipovehiculo id is valid.
	 * @param Tipovehiculo Tipovehiculo
	 * @return boolean
	 */
	private boolean hasLinkToTipovehiculo(Modelo modelo) {
		if(modelo.getTipovehiculoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}