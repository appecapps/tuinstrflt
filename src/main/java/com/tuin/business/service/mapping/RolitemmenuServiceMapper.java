/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Rolitemmenu;
import com.tuin.bean.jpa.RolitemmenuEntity;
import com.tuin.bean.jpa.ItemmenuEntity;
import com.tuin.bean.jpa.RolEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class RolitemmenuServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public RolitemmenuServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'RolitemmenuEntity' to 'Rolitemmenu'
	 * @param rolitemmenuEntity
	 */
	public Rolitemmenu mapRolitemmenuEntityToRolitemmenu(RolitemmenuEntity rolitemmenuEntity) {
		if(rolitemmenuEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Rolitemmenu rolitemmenu = map(rolitemmenuEntity, Rolitemmenu.class);

		//--- Link mapping ( link to Itemmenu )
		if(rolitemmenuEntity.getItemmenu() != null) {
			rolitemmenu.setItemmenuid(rolitemmenuEntity.getItemmenu().getId());
		}
		//--- Link mapping ( link to Rol )
		if(rolitemmenuEntity.getRol() != null) {
			rolitemmenu.setRolid(rolitemmenuEntity.getRol().getId());
		}
		return rolitemmenu;
	}
	
	/**
	 * Mapping from 'Rolitemmenu' to 'RolitemmenuEntity'
	 * @param rolitemmenu
	 * @param rolitemmenuEntity
	 */
	public void mapRolitemmenuToRolitemmenuEntity(Rolitemmenu rolitemmenu, RolitemmenuEntity rolitemmenuEntity) {
		if(rolitemmenu == null) {
			return;
		}

		//--- Generic mapping 
		map(rolitemmenu, rolitemmenuEntity);

		//--- Link mapping ( link : rolitemmenu )
		if( hasLinkToItemmenu(rolitemmenu) ) {
			ItemmenuEntity itemmenu1 = new ItemmenuEntity();
			itemmenu1.setId( rolitemmenu.getItemmenuid() );
			rolitemmenuEntity.setItemmenu( itemmenu1 );
		} else {
			rolitemmenuEntity.setItemmenu( null );
		}

		//--- Link mapping ( link : rolitemmenu )
		if( hasLinkToRol(rolitemmenu) ) {
			RolEntity rol2 = new RolEntity();
			rol2.setId( rolitemmenu.getRolid() );
			rolitemmenuEntity.setRol( rol2 );
		} else {
			rolitemmenuEntity.setRol( null );
		}

	}
	
	/**
	 * Verify that Itemmenu id is valid.
	 * @param Itemmenu Itemmenu
	 * @return boolean
	 */
	private boolean hasLinkToItemmenu(Rolitemmenu rolitemmenu) {
		if(rolitemmenu.getItemmenuid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Rol id is valid.
	 * @param Rol Rol
	 * @return boolean
	 */
	private boolean hasLinkToRol(Rolitemmenu rolitemmenu) {
		if(rolitemmenu.getRolid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}