/*
 * Created on 28 ago 2017 ( Time 17:51:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Tipodocumento;
import com.tuin.bean.jpa.TipodocumentoEntity;
import com.tuin.bean.jpa.TipocarteraEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TipodocumentoServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TipodocumentoServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TipodocumentoEntity' to 'Tipodocumento'
	 * @param tipodocumentoEntity
	 */
	public Tipodocumento mapTipodocumentoEntityToTipodocumento(TipodocumentoEntity tipodocumentoEntity) {
		if(tipodocumentoEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Tipodocumento tipodocumento = map(tipodocumentoEntity, Tipodocumento.class);

		//--- Link mapping ( link to Tipocartera )
		if(tipodocumentoEntity.getTipocartera() != null) {
			tipodocumento.setTipocarteraid(tipodocumentoEntity.getTipocartera().getId());
		}
		return tipodocumento;
	}
	
	/**
	 * Mapping from 'Tipodocumento' to 'TipodocumentoEntity'
	 * @param tipodocumento
	 * @param tipodocumentoEntity
	 */
	public void mapTipodocumentoToTipodocumentoEntity(Tipodocumento tipodocumento, TipodocumentoEntity tipodocumentoEntity) {
		if(tipodocumento == null) {
			return;
		}

		//--- Generic mapping 
		map(tipodocumento, tipodocumentoEntity);

		//--- Link mapping ( link : tipodocumento )
		if( hasLinkToTipocartera(tipodocumento) ) {
			TipocarteraEntity tipocartera1 = new TipocarteraEntity();
			tipocartera1.setId( tipodocumento.getTipocarteraid() );
			tipodocumentoEntity.setTipocartera( tipocartera1 );
		} else {
			tipodocumentoEntity.setTipocartera( null );
		}

	}
	
	/**
	 * Verify that Tipocartera id is valid.
	 * @param Tipocartera Tipocartera
	 * @return boolean
	 */
	private boolean hasLinkToTipocartera(Tipodocumento tipodocumento) {
		if(tipodocumento.getTipocarteraid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}