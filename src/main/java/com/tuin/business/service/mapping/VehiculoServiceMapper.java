/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Vehiculo;
import com.tuin.bean.jpa.VehiculoEntity;
import com.tuin.bean.jpa.ModeloEntity;
import com.tuin.bean.jpa.ColorEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class VehiculoServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public VehiculoServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'VehiculoEntity' to 'Vehiculo'
	 * @param vehiculoEntity
	 */
	public Vehiculo mapVehiculoEntityToVehiculo(VehiculoEntity vehiculoEntity) {
		if(vehiculoEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Vehiculo vehiculo = map(vehiculoEntity, Vehiculo.class);

		//--- Link mapping ( link to Modelo )
		if(vehiculoEntity.getModelo() != null) {
			vehiculo.setModeloid(vehiculoEntity.getModelo().getId());
		}
		//--- Link mapping ( link to Color )
		if(vehiculoEntity.getColor() != null) {
			vehiculo.setColorid(vehiculoEntity.getColor().getId());
		}
		return vehiculo;
	}
	
	/**
	 * Mapping from 'Vehiculo' to 'VehiculoEntity'
	 * @param vehiculo
	 * @param vehiculoEntity
	 */
	public void mapVehiculoToVehiculoEntity(Vehiculo vehiculo, VehiculoEntity vehiculoEntity) {
		if(vehiculo == null) {
			return;
		}

		//--- Generic mapping 
		map(vehiculo, vehiculoEntity);

		//--- Link mapping ( link : vehiculo )
		if( hasLinkToModelo(vehiculo) ) {
			ModeloEntity modelo1 = new ModeloEntity();
			modelo1.setId( vehiculo.getModeloid() );
			vehiculoEntity.setModelo( modelo1 );
		} else {
			vehiculoEntity.setModelo( null );
		}

		//--- Link mapping ( link : vehiculo )
		if( hasLinkToColor(vehiculo) ) {
			ColorEntity color2 = new ColorEntity();
			color2.setId( vehiculo.getColorid() );
			vehiculoEntity.setColor( color2 );
		} else {
			vehiculoEntity.setColor( null );
		}

	}
	
	/**
	 * Verify that Modelo id is valid.
	 * @param Modelo Modelo
	 * @return boolean
	 */
	private boolean hasLinkToModelo(Vehiculo vehiculo) {
		if(vehiculo.getModeloid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Color id is valid.
	 * @param Color Color
	 * @return boolean
	 */
	private boolean hasLinkToColor(Vehiculo vehiculo) {
		if(vehiculo.getColorid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}