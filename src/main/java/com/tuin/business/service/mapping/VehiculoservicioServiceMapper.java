/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Vehiculoservicio;
import com.tuin.bean.jpa.VehiculoservicioEntity;
import com.tuin.bean.jpa.ServicioEntity;
import com.tuin.bean.jpa.VehiculoEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class VehiculoservicioServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public VehiculoservicioServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'VehiculoservicioEntity' to 'Vehiculoservicio'
	 * @param vehiculoservicioEntity
	 */
	public Vehiculoservicio mapVehiculoservicioEntityToVehiculoservicio(VehiculoservicioEntity vehiculoservicioEntity) {
		if(vehiculoservicioEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Vehiculoservicio vehiculoservicio = map(vehiculoservicioEntity, Vehiculoservicio.class);

		//--- Link mapping ( link to Servicio )
		if(vehiculoservicioEntity.getServicio() != null) {
			vehiculoservicio.setServicioid(vehiculoservicioEntity.getServicio().getId());
		}
		//--- Link mapping ( link to Vehiculo )
		if(vehiculoservicioEntity.getVehiculo() != null) {
			vehiculoservicio.setVehiculoid(vehiculoservicioEntity.getVehiculo().getId());
		}
		return vehiculoservicio;
	}
	
	/**
	 * Mapping from 'Vehiculoservicio' to 'VehiculoservicioEntity'
	 * @param vehiculoservicio
	 * @param vehiculoservicioEntity
	 */
	public void mapVehiculoservicioToVehiculoservicioEntity(Vehiculoservicio vehiculoservicio, VehiculoservicioEntity vehiculoservicioEntity) {
		if(vehiculoservicio == null) {
			return;
		}

		//--- Generic mapping 
		map(vehiculoservicio, vehiculoservicioEntity);

		//--- Link mapping ( link : vehiculoservicio )
		if( hasLinkToServicio(vehiculoservicio) ) {
			ServicioEntity servicio1 = new ServicioEntity();
			servicio1.setId( vehiculoservicio.getServicioid() );
			vehiculoservicioEntity.setServicio( servicio1 );
		} else {
			vehiculoservicioEntity.setServicio( null );
		}

		//--- Link mapping ( link : vehiculoservicio )
		if( hasLinkToVehiculo(vehiculoservicio) ) {
			VehiculoEntity vehiculo2 = new VehiculoEntity();
			vehiculo2.setId( vehiculoservicio.getVehiculoid() );
			vehiculoservicioEntity.setVehiculo( vehiculo2 );
		} else {
			vehiculoservicioEntity.setVehiculo( null );
		}

	}
	
	/**
	 * Verify that Servicio id is valid.
	 * @param Servicio Servicio
	 * @return boolean
	 */
	private boolean hasLinkToServicio(Vehiculoservicio vehiculoservicio) {
		if(vehiculoservicio.getServicioid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Vehiculo id is valid.
	 * @param Vehiculo Vehiculo
	 * @return boolean
	 */
	private boolean hasLinkToVehiculo(Vehiculoservicio vehiculoservicio) {
		if(vehiculoservicio.getVehiculoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}