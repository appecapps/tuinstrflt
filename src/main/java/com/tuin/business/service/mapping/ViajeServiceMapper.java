/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Viaje;
import com.tuin.bean.jpa.ViajeEntity;
import com.tuin.bean.jpa.ChofervehiculoEntity;
import com.tuin.bean.jpa.DestinohorarioEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ViajeServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ViajeServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ViajeEntity' to 'Viaje'
	 * @param viajeEntity
	 */
	public Viaje mapViajeEntityToViaje(ViajeEntity viajeEntity) {
		if(viajeEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Viaje viaje = map(viajeEntity, Viaje.class);

		//--- Link mapping ( link to Chofervehiculo )
		if(viajeEntity.getChofervehiculo() != null) {
			viaje.setChofervehiculoid(viajeEntity.getChofervehiculo().getId());
		}
		//--- Link mapping ( link to Destinohorario )
		if(viajeEntity.getDestinohorario() != null) {
			viaje.setDestinohorarioid(viajeEntity.getDestinohorario().getId());
		}
		return viaje;
	}
	
	/**
	 * Mapping from 'Viaje' to 'ViajeEntity'
	 * @param viaje
	 * @param viajeEntity
	 */
	public void mapViajeToViajeEntity(Viaje viaje, ViajeEntity viajeEntity) {
		if(viaje == null) {
			return;
		}

		//--- Generic mapping 
		map(viaje, viajeEntity);

		//--- Link mapping ( link : viaje )
		if( hasLinkToChofervehiculo(viaje) ) {
			ChofervehiculoEntity chofervehiculo1 = new ChofervehiculoEntity();
			chofervehiculo1.setId( viaje.getChofervehiculoid() );
			viajeEntity.setChofervehiculo( chofervehiculo1 );
		} else {
			viajeEntity.setChofervehiculo( null );
		}

		//--- Link mapping ( link : viaje )
		if( hasLinkToDestinohorario(viaje) ) {
			DestinohorarioEntity destinohorario2 = new DestinohorarioEntity();
			destinohorario2.setId( viaje.getDestinohorarioid() );
			viajeEntity.setDestinohorario( destinohorario2 );
		} else {
			viajeEntity.setDestinohorario( null );
		}

	}
	
	/**
	 * Verify that Chofervehiculo id is valid.
	 * @param Chofervehiculo Chofervehiculo
	 * @return boolean
	 */
	private boolean hasLinkToChofervehiculo(Viaje viaje) {
		if(viaje.getChofervehiculoid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Destinohorario id is valid.
	 * @param Destinohorario Destinohorario
	 * @return boolean
	 */
	private boolean hasLinkToDestinohorario(Viaje viaje) {
		if(viaje.getDestinohorarioid() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}