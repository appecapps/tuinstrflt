/*
 * Created on 28 ago 2017 ( Time 17:51:01 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.persistence.services.fake;

import java.util.List;
import java.util.Map;

import com.tuin.bean.jpa.ServicioEntity;
import com.tuin.persistence.commons.fake.GenericFakeService;
import com.tuin.persistence.services.ServicioPersistence;

/**
 * Fake persistence service implementation ( entity "Servicio" )
 *
 * @author Telosys Tools Generator
 */
public class ServicioPersistenceFAKE extends GenericFakeService<ServicioEntity> implements ServicioPersistence {

	public ServicioPersistenceFAKE () {
		super(ServicioEntity.class);
	}
	
	protected ServicioEntity buildEntity(int index) {
		ServicioEntity entity = new ServicioEntity();
		// Init fields with mock values
		entity.setId( nextLong() ) ;
		entity.setNombre( nextString() ) ;
		entity.setActivo( nextByte() ) ;
		entity.setCosto( nextDouble() ) ;
		return entity ;
	}
	
	
	public boolean delete(ServicioEntity entity) {
		log("delete ( ServicioEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Long id ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(ServicioEntity entity) {
		log("insert ( ServicioEntity : " + entity + ")" ) ;
	}

	public ServicioEntity load( Long id ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<ServicioEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<ServicioEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<ServicioEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public ServicioEntity save(ServicioEntity entity) {
		log("insert ( ServicioEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<ServicioEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
