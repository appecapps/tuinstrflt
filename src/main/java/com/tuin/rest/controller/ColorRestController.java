/*
 * Created on 28 ago 2017 ( Time 17:51:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Color;
import com.tuin.business.service.ColorService;
import com.tuin.web.listitem.ColorListItem;

/**
 * Spring MVC controller for 'Color' management.
 */
@Controller
public class ColorRestController {

	@Resource
	private ColorService colorService;
	
	@RequestMapping( value="/items/color",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ColorListItem> findAllAsListItems() {
		List<Color> list = colorService.findAll();
		List<ColorListItem> items = new LinkedList<ColorListItem>();
		for ( Color color : list ) {
			items.add(new ColorListItem( color ) );
		}
		return items;
	}
	
	@RequestMapping( value="/color",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Color> findAll() {
		return colorService.findAll();
	}

	@RequestMapping( value="/color/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Color findOne(@PathVariable("id") Long id) {
		return colorService.findById(id);
	}
	
	@RequestMapping( value="/color",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Color create(@RequestBody Color color) {
		return colorService.create(color);
	}

	@RequestMapping( value="/color/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Color update(@PathVariable("id") Long id, @RequestBody Color color) {
		return colorService.update(color);
	}

	@RequestMapping( value="/color/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		colorService.delete(id);
	}
	
}
