/*
 * Created on 28 ago 2017 ( Time 17:51:40 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Componentefinanciero;
import com.tuin.business.service.ComponentefinancieroService;
import com.tuin.web.listitem.ComponentefinancieroListItem;

/**
 * Spring MVC controller for 'Componentefinanciero' management.
 */
@Controller
public class ComponentefinancieroRestController {

	@Resource
	private ComponentefinancieroService componentefinancieroService;
	
	@RequestMapping( value="/items/componentefinanciero",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ComponentefinancieroListItem> findAllAsListItems() {
		List<Componentefinanciero> list = componentefinancieroService.findAll();
		List<ComponentefinancieroListItem> items = new LinkedList<ComponentefinancieroListItem>();
		for ( Componentefinanciero componentefinanciero : list ) {
			items.add(new ComponentefinancieroListItem( componentefinanciero ) );
		}
		return items;
	}
	
	@RequestMapping( value="/componentefinanciero",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Componentefinanciero> findAll() {
		return componentefinancieroService.findAll();
	}

	@RequestMapping( value="/componentefinanciero/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Componentefinanciero findOne(@PathVariable("id") Long id) {
		return componentefinancieroService.findById(id);
	}
	
	@RequestMapping( value="/componentefinanciero",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Componentefinanciero create(@RequestBody Componentefinanciero componentefinanciero) {
		return componentefinancieroService.create(componentefinanciero);
	}

	@RequestMapping( value="/componentefinanciero/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Componentefinanciero update(@PathVariable("id") Long id, @RequestBody Componentefinanciero componentefinanciero) {
		return componentefinancieroService.update(componentefinanciero);
	}

	@RequestMapping( value="/componentefinanciero/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		componentefinancieroService.delete(id);
	}
	
}
