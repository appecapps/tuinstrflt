/*
 * Created on 28 ago 2017 ( Time 17:51:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Marca;
import com.tuin.business.service.MarcaService;
import com.tuin.web.listitem.MarcaListItem;

/**
 * Spring MVC controller for 'Marca' management.
 */
@Controller
public class MarcaRestController {

	@Resource
	private MarcaService marcaService;
	
	@RequestMapping( value="/items/marca",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MarcaListItem> findAllAsListItems() {
		List<Marca> list = marcaService.findAll();
		List<MarcaListItem> items = new LinkedList<MarcaListItem>();
		for ( Marca marca : list ) {
			items.add(new MarcaListItem( marca ) );
		}
		return items;
	}
	
	@RequestMapping( value="/marca",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Marca> findAll() {
		return marcaService.findAll();
	}

	@RequestMapping( value="/marca/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Marca findOne(@PathVariable("id") Long id) {
		return marcaService.findById(id);
	}
	
	@RequestMapping( value="/marca",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Marca create(@RequestBody Marca marca) {
		return marcaService.create(marca);
	}

	@RequestMapping( value="/marca/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Marca update(@PathVariable("id") Long id, @RequestBody Marca marca) {
		return marcaService.update(marca);
	}

	@RequestMapping( value="/marca/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		marcaService.delete(id);
	}
	
}
