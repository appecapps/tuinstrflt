/*
 * Created on 28 ago 2017 ( Time 17:51:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Menu;
import com.tuin.business.service.MenuService;
import com.tuin.web.listitem.MenuListItem;

/**
 * Spring MVC controller for 'Menu' management.
 */
@Controller
public class MenuRestController {

	@Resource
	private MenuService menuService;
	
	@RequestMapping( value="/items/menu",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MenuListItem> findAllAsListItems() {
		List<Menu> list = menuService.findAll();
		List<MenuListItem> items = new LinkedList<MenuListItem>();
		for ( Menu menu : list ) {
			items.add(new MenuListItem( menu ) );
		}
		return items;
	}
	
	@RequestMapping( value="/menu",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Menu> findAll() {
		return menuService.findAll();
	}

	@RequestMapping( value="/menu/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Menu findOne(@PathVariable("id") Long id) {
		return menuService.findById(id);
	}
	
	@RequestMapping( value="/menu",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Menu create(@RequestBody Menu menu) {
		return menuService.create(menu);
	}

	@RequestMapping( value="/menu/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Menu update(@PathVariable("id") Long id, @RequestBody Menu menu) {
		return menuService.update(menu);
	}

	@RequestMapping( value="/menu/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		menuService.delete(id);
	}
	
}
