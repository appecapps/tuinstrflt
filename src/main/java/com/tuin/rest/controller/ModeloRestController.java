/*
 * Created on 28 ago 2017 ( Time 17:51:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Modelo;
import com.tuin.business.service.ModeloService;
import com.tuin.web.listitem.ModeloListItem;

/**
 * Spring MVC controller for 'Modelo' management.
 */
@Controller
public class ModeloRestController {

	@Resource
	private ModeloService modeloService;
	
	@RequestMapping( value="/items/modelo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ModeloListItem> findAllAsListItems() {
		List<Modelo> list = modeloService.findAll();
		List<ModeloListItem> items = new LinkedList<ModeloListItem>();
		for ( Modelo modelo : list ) {
			items.add(new ModeloListItem( modelo ) );
		}
		return items;
	}
	
	@RequestMapping( value="/modelo",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Modelo> findAll() {
		return modeloService.findAll();
	}

	@RequestMapping( value="/modelo/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Modelo findOne(@PathVariable("id") Long id) {
		return modeloService.findById(id);
	}
	
	@RequestMapping( value="/modelo",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Modelo create(@RequestBody Modelo modelo) {
		return modeloService.create(modelo);
	}

	@RequestMapping( value="/modelo/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Modelo update(@PathVariable("id") Long id, @RequestBody Modelo modelo) {
		return modeloService.update(modelo);
	}

	@RequestMapping( value="/modelo/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		modeloService.delete(id);
	}
	
}
