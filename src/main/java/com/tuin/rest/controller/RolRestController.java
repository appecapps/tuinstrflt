/*
 * Created on 28 ago 2017 ( Time 17:51:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Rol;
import com.tuin.business.service.RolService;
import com.tuin.web.listitem.RolListItem;

/**
 * Spring MVC controller for 'Rol' management.
 */
@Controller
public class RolRestController {

	@Resource
	private RolService rolService;
	
	@RequestMapping( value="/items/rol",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<RolListItem> findAllAsListItems() {
		List<Rol> list = rolService.findAll();
		List<RolListItem> items = new LinkedList<RolListItem>();
		for ( Rol rol : list ) {
			items.add(new RolListItem( rol ) );
		}
		return items;
	}
	
	@RequestMapping( value="/rol",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Rol> findAll() {
		return rolService.findAll();
	}

	@RequestMapping( value="/rol/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Rol findOne(@PathVariable("id") Long id) {
		return rolService.findById(id);
	}
	
	@RequestMapping( value="/rol",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Rol create(@RequestBody Rol rol) {
		return rolService.create(rol);
	}

	@RequestMapping( value="/rol/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Rol update(@PathVariable("id") Long id, @RequestBody Rol rol) {
		return rolService.update(rol);
	}

	@RequestMapping( value="/rol/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		rolService.delete(id);
	}
	
}
