/*
 * Created on 28 ago 2017 ( Time 17:51:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Tipocomponentefinanciero;
import com.tuin.business.service.TipocomponentefinancieroService;
import com.tuin.web.listitem.TipocomponentefinancieroListItem;

/**
 * Spring MVC controller for 'Tipocomponentefinanciero' management.
 */
@Controller
public class TipocomponentefinancieroRestController {

	@Resource
	private TipocomponentefinancieroService tipocomponentefinancieroService;
	
	@RequestMapping( value="/items/tipocomponentefinanciero",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TipocomponentefinancieroListItem> findAllAsListItems() {
		List<Tipocomponentefinanciero> list = tipocomponentefinancieroService.findAll();
		List<TipocomponentefinancieroListItem> items = new LinkedList<TipocomponentefinancieroListItem>();
		for ( Tipocomponentefinanciero tipocomponentefinanciero : list ) {
			items.add(new TipocomponentefinancieroListItem( tipocomponentefinanciero ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tipocomponentefinanciero",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Tipocomponentefinanciero> findAll() {
		return tipocomponentefinancieroService.findAll();
	}

	@RequestMapping( value="/tipocomponentefinanciero/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipocomponentefinanciero findOne(@PathVariable("id") Long id) {
		return tipocomponentefinancieroService.findById(id);
	}
	
	@RequestMapping( value="/tipocomponentefinanciero",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipocomponentefinanciero create(@RequestBody Tipocomponentefinanciero tipocomponentefinanciero) {
		return tipocomponentefinancieroService.create(tipocomponentefinanciero);
	}

	@RequestMapping( value="/tipocomponentefinanciero/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipocomponentefinanciero update(@PathVariable("id") Long id, @RequestBody Tipocomponentefinanciero tipocomponentefinanciero) {
		return tipocomponentefinancieroService.update(tipocomponentefinanciero);
	}

	@RequestMapping( value="/tipocomponentefinanciero/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		tipocomponentefinancieroService.delete(id);
	}
	
}
