/*
 * Created on 28 ago 2017 ( Time 17:51:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.tuin.bean.Tipodocumento;
import com.tuin.business.service.TipodocumentoService;
import com.tuin.web.listitem.TipodocumentoListItem;

/**
 * Spring MVC controller for 'Tipodocumento' management.
 */
@Controller
public class TipodocumentoRestController {

	@Resource
	private TipodocumentoService tipodocumentoService;
	
	@RequestMapping( value="/items/tipodocumento",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TipodocumentoListItem> findAllAsListItems() {
		List<Tipodocumento> list = tipodocumentoService.findAll();
		List<TipodocumentoListItem> items = new LinkedList<TipodocumentoListItem>();
		for ( Tipodocumento tipodocumento : list ) {
			items.add(new TipodocumentoListItem( tipodocumento ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tipodocumento",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Tipodocumento> findAll() {
		return tipodocumentoService.findAll();
	}

	@RequestMapping( value="/tipodocumento/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipodocumento findOne(@PathVariable("id") Long id) {
		return tipodocumentoService.findById(id);
	}
	
	@RequestMapping( value="/tipodocumento",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipodocumento create(@RequestBody Tipodocumento tipodocumento) {
		return tipodocumentoService.create(tipodocumento);
	}

	@RequestMapping( value="/tipodocumento/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Tipodocumento update(@PathVariable("id") Long id, @RequestBody Tipodocumento tipodocumento) {
		return tipodocumentoService.update(tipodocumento);
	}

	@RequestMapping( value="/tipodocumento/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		tipodocumentoService.delete(id);
	}
	
}
