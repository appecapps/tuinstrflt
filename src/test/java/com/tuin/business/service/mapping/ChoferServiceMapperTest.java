/*
 * Created on 28 ago 2017 ( Time 17:51:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Chofer;
import com.tuin.bean.jpa.ChoferEntity;
import com.tuin.bean.jpa.EntidadEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ChoferServiceMapperTest {

	private ChoferServiceMapper choferServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		choferServiceMapper = new ChoferServiceMapper();
		choferServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ChoferEntity' to 'Chofer'
	 * @param choferEntity
	 */
	@Test
	public void testMapChoferEntityToChofer() {
		// Given
		ChoferEntity choferEntity = new ChoferEntity();
		choferEntity.setPrioridad(mockValues.nextInteger());
		choferEntity.setTipolicencia(mockValues.nextString(1));
		choferEntity.setLatitud(mockValues.nextBigDecimal());
		choferEntity.setLogitud(mockValues.nextBigDecimal());
		choferEntity.setEntidad(new EntidadEntity());
		choferEntity.getEntidad().setId(mockValues.nextLong());
		
		// When
		Chofer chofer = choferServiceMapper.mapChoferEntityToChofer(choferEntity);
		
		// Then
		assertEquals(choferEntity.getPrioridad(), chofer.getPrioridad());
		assertEquals(choferEntity.getTipolicencia(), chofer.getTipolicencia());
		assertEquals(choferEntity.getLatitud(), chofer.getLatitud());
		assertEquals(choferEntity.getLogitud(), chofer.getLogitud());
		assertEquals(choferEntity.getEntidad().getId(), chofer.getEntidadid());
	}
	
	/**
	 * Test : Mapping from 'Chofer' to 'ChoferEntity'
	 */
	@Test
	public void testMapChoferToChoferEntity() {
		// Given
		Chofer chofer = new Chofer();
		chofer.setPrioridad(mockValues.nextInteger());
		chofer.setTipolicencia(mockValues.nextString(1));
		chofer.setLatitud(mockValues.nextBigDecimal());
		chofer.setLogitud(mockValues.nextBigDecimal());
		chofer.setEntidadid(mockValues.nextLong());

		ChoferEntity choferEntity = new ChoferEntity();
		
		// When
		choferServiceMapper.mapChoferToChoferEntity(chofer, choferEntity);
		
		// Then
		assertEquals(chofer.getPrioridad(), choferEntity.getPrioridad());
		assertEquals(chofer.getTipolicencia(), choferEntity.getTipolicencia());
		assertEquals(chofer.getLatitud(), choferEntity.getLatitud());
		assertEquals(chofer.getLogitud(), choferEntity.getLogitud());
		assertEquals(chofer.getEntidadid(), choferEntity.getEntidad().getId());
	}

}