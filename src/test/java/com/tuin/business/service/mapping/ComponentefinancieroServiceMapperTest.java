/*
 * Created on 28 ago 2017 ( Time 17:51:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Componentefinanciero;
import com.tuin.bean.jpa.ComponentefinancieroEntity;
import com.tuin.bean.jpa.TipodocumentoEntity;
import com.tuin.bean.jpa.TipocomponentefinancieroEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ComponentefinancieroServiceMapperTest {

	private ComponentefinancieroServiceMapper componentefinancieroServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		componentefinancieroServiceMapper = new ComponentefinancieroServiceMapper();
		componentefinancieroServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ComponentefinancieroEntity' to 'Componentefinanciero'
	 * @param componentefinancieroEntity
	 */
	@Test
	public void testMapComponentefinancieroEntityToComponentefinanciero() {
		// Given
		ComponentefinancieroEntity componentefinancieroEntity = new ComponentefinancieroEntity();
		componentefinancieroEntity.setNombre(mockValues.nextString(45));
		componentefinancieroEntity.setVigenciadesde(mockValues.nextDate());
		componentefinancieroEntity.setVigenciahasta(mockValues.nextDate());
		componentefinancieroEntity.setRubro(mockValues.nextString(45));
		componentefinancieroEntity.setTipodocumento(new TipodocumentoEntity());
		componentefinancieroEntity.getTipodocumento().setId(mockValues.nextLong());
		componentefinancieroEntity.setTipocomponentefinanciero(new TipocomponentefinancieroEntity());
		componentefinancieroEntity.getTipocomponentefinanciero().setId(mockValues.nextLong());
		
		// When
		Componentefinanciero componentefinanciero = componentefinancieroServiceMapper.mapComponentefinancieroEntityToComponentefinanciero(componentefinancieroEntity);
		
		// Then
		assertEquals(componentefinancieroEntity.getNombre(), componentefinanciero.getNombre());
		assertEquals(componentefinancieroEntity.getVigenciadesde(), componentefinanciero.getVigenciadesde());
		assertEquals(componentefinancieroEntity.getVigenciahasta(), componentefinanciero.getVigenciahasta());
		assertEquals(componentefinancieroEntity.getRubro(), componentefinanciero.getRubro());
		assertEquals(componentefinancieroEntity.getTipodocumento().getId(), componentefinanciero.getTipodocumentoid());
		assertEquals(componentefinancieroEntity.getTipocomponentefinanciero().getId(), componentefinanciero.getTipocomponentefinancieroid());
	}
	
	/**
	 * Test : Mapping from 'Componentefinanciero' to 'ComponentefinancieroEntity'
	 */
	@Test
	public void testMapComponentefinancieroToComponentefinancieroEntity() {
		// Given
		Componentefinanciero componentefinanciero = new Componentefinanciero();
		componentefinanciero.setNombre(mockValues.nextString(45));
		componentefinanciero.setVigenciadesde(mockValues.nextDate());
		componentefinanciero.setVigenciahasta(mockValues.nextDate());
		componentefinanciero.setRubro(mockValues.nextString(45));
		componentefinanciero.setTipodocumentoid(mockValues.nextLong());
		componentefinanciero.setTipocomponentefinancieroid(mockValues.nextLong());

		ComponentefinancieroEntity componentefinancieroEntity = new ComponentefinancieroEntity();
		
		// When
		componentefinancieroServiceMapper.mapComponentefinancieroToComponentefinancieroEntity(componentefinanciero, componentefinancieroEntity);
		
		// Then
		assertEquals(componentefinanciero.getNombre(), componentefinancieroEntity.getNombre());
		assertEquals(componentefinanciero.getVigenciadesde(), componentefinancieroEntity.getVigenciadesde());
		assertEquals(componentefinanciero.getVigenciahasta(), componentefinancieroEntity.getVigenciahasta());
		assertEquals(componentefinanciero.getRubro(), componentefinancieroEntity.getRubro());
		assertEquals(componentefinanciero.getTipodocumentoid(), componentefinancieroEntity.getTipodocumento().getId());
		assertEquals(componentefinanciero.getTipocomponentefinancieroid(), componentefinancieroEntity.getTipocomponentefinanciero().getId());
	}

}