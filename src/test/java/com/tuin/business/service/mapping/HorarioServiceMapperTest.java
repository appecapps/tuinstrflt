/*
 * Created on 28 ago 2017 ( Time 17:51:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Horario;
import com.tuin.bean.jpa.HorarioEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class HorarioServiceMapperTest {

	private HorarioServiceMapper horarioServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		horarioServiceMapper = new HorarioServiceMapper();
		horarioServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'HorarioEntity' to 'Horario'
	 * @param horarioEntity
	 */
	@Test
	public void testMapHorarioEntityToHorario() {
		// Given
		HorarioEntity horarioEntity = new HorarioEntity();
		horarioEntity.setFecha(mockValues.nextDate());
		horarioEntity.setHora(mockValues.nextDate());
		horarioEntity.setActivo(mockValues.nextByte());
		
		// When
		Horario horario = horarioServiceMapper.mapHorarioEntityToHorario(horarioEntity);
		
		// Then
		assertEquals(horarioEntity.getFecha(), horario.getFecha());
		assertEquals(horarioEntity.getHora(), horario.getHora());
		assertEquals(horarioEntity.getActivo(), horario.getActivo());
	}
	
	/**
	 * Test : Mapping from 'Horario' to 'HorarioEntity'
	 */
	@Test
	public void testMapHorarioToHorarioEntity() {
		// Given
		Horario horario = new Horario();
		horario.setFecha(mockValues.nextDate());
		horario.setHora(mockValues.nextDate());
		horario.setActivo(mockValues.nextByte());

		HorarioEntity horarioEntity = new HorarioEntity();
		
		// When
		horarioServiceMapper.mapHorarioToHorarioEntity(horario, horarioEntity);
		
		// Then
		assertEquals(horario.getFecha(), horarioEntity.getFecha());
		assertEquals(horario.getHora(), horarioEntity.getHora());
		assertEquals(horario.getActivo(), horarioEntity.getActivo());
	}

}