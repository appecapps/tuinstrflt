/*
 * Created on 28 ago 2017 ( Time 17:51:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Servicio;
import com.tuin.bean.jpa.ServicioEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ServicioServiceMapperTest {

	private ServicioServiceMapper servicioServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		servicioServiceMapper = new ServicioServiceMapper();
		servicioServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ServicioEntity' to 'Servicio'
	 * @param servicioEntity
	 */
	@Test
	public void testMapServicioEntityToServicio() {
		// Given
		ServicioEntity servicioEntity = new ServicioEntity();
		servicioEntity.setNombre(mockValues.nextString(45));
		servicioEntity.setActivo(mockValues.nextByte());
		servicioEntity.setCosto(mockValues.nextDouble());
		
		// When
		Servicio servicio = servicioServiceMapper.mapServicioEntityToServicio(servicioEntity);
		
		// Then
		assertEquals(servicioEntity.getNombre(), servicio.getNombre());
		assertEquals(servicioEntity.getActivo(), servicio.getActivo());
		assertEquals(servicioEntity.getCosto(), servicio.getCosto());
	}
	
	/**
	 * Test : Mapping from 'Servicio' to 'ServicioEntity'
	 */
	@Test
	public void testMapServicioToServicioEntity() {
		// Given
		Servicio servicio = new Servicio();
		servicio.setNombre(mockValues.nextString(45));
		servicio.setActivo(mockValues.nextByte());
		servicio.setCosto(mockValues.nextDouble());

		ServicioEntity servicioEntity = new ServicioEntity();
		
		// When
		servicioServiceMapper.mapServicioToServicioEntity(servicio, servicioEntity);
		
		// Then
		assertEquals(servicio.getNombre(), servicioEntity.getNombre());
		assertEquals(servicio.getActivo(), servicioEntity.getActivo());
		assertEquals(servicio.getCosto(), servicioEntity.getCosto());
	}

}