/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Vehiculo;
import com.tuin.bean.jpa.VehiculoEntity;
import com.tuin.bean.jpa.ModeloEntity;
import com.tuin.bean.jpa.ColorEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class VehiculoServiceMapperTest {

	private VehiculoServiceMapper vehiculoServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		vehiculoServiceMapper = new VehiculoServiceMapper();
		vehiculoServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'VehiculoEntity' to 'Vehiculo'
	 * @param vehiculoEntity
	 */
	@Test
	public void testMapVehiculoEntityToVehiculo() {
		// Given
		VehiculoEntity vehiculoEntity = new VehiculoEntity();
		vehiculoEntity.setPlaca(mockValues.nextString(25));
		vehiculoEntity.setMotor(mockValues.nextString(45));
		vehiculoEntity.setChasis(mockValues.nextString(45));
		vehiculoEntity.setPasajeros(mockValues.nextInteger());
		vehiculoEntity.setAnio(mockValues.nextInteger());
		vehiculoEntity.setModelo(new ModeloEntity());
		vehiculoEntity.getModelo().setId(mockValues.nextLong());
		vehiculoEntity.setColor(new ColorEntity());
		vehiculoEntity.getColor().setId(mockValues.nextLong());
		
		// When
		Vehiculo vehiculo = vehiculoServiceMapper.mapVehiculoEntityToVehiculo(vehiculoEntity);
		
		// Then
		assertEquals(vehiculoEntity.getPlaca(), vehiculo.getPlaca());
		assertEquals(vehiculoEntity.getMotor(), vehiculo.getMotor());
		assertEquals(vehiculoEntity.getChasis(), vehiculo.getChasis());
		assertEquals(vehiculoEntity.getPasajeros(), vehiculo.getPasajeros());
		assertEquals(vehiculoEntity.getAnio(), vehiculo.getAnio());
		assertEquals(vehiculoEntity.getModelo().getId(), vehiculo.getModeloid());
		assertEquals(vehiculoEntity.getColor().getId(), vehiculo.getColorid());
	}
	
	/**
	 * Test : Mapping from 'Vehiculo' to 'VehiculoEntity'
	 */
	@Test
	public void testMapVehiculoToVehiculoEntity() {
		// Given
		Vehiculo vehiculo = new Vehiculo();
		vehiculo.setPlaca(mockValues.nextString(25));
		vehiculo.setMotor(mockValues.nextString(45));
		vehiculo.setChasis(mockValues.nextString(45));
		vehiculo.setPasajeros(mockValues.nextInteger());
		vehiculo.setAnio(mockValues.nextInteger());
		vehiculo.setModeloid(mockValues.nextLong());
		vehiculo.setColorid(mockValues.nextLong());

		VehiculoEntity vehiculoEntity = new VehiculoEntity();
		
		// When
		vehiculoServiceMapper.mapVehiculoToVehiculoEntity(vehiculo, vehiculoEntity);
		
		// Then
		assertEquals(vehiculo.getPlaca(), vehiculoEntity.getPlaca());
		assertEquals(vehiculo.getMotor(), vehiculoEntity.getMotor());
		assertEquals(vehiculo.getChasis(), vehiculoEntity.getChasis());
		assertEquals(vehiculo.getPasajeros(), vehiculoEntity.getPasajeros());
		assertEquals(vehiculo.getAnio(), vehiculoEntity.getAnio());
		assertEquals(vehiculo.getModeloid(), vehiculoEntity.getModelo().getId());
		assertEquals(vehiculo.getColorid(), vehiculoEntity.getColor().getId());
	}

}