/*
 * Created on 28 ago 2017 ( Time 17:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.tuin.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.tuin.bean.Viaje;
import com.tuin.bean.jpa.ViajeEntity;
import com.tuin.bean.jpa.ChofervehiculoEntity;
import com.tuin.bean.jpa.DestinohorarioEntity;
import com.tuin.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ViajeServiceMapperTest {

	private ViajeServiceMapper viajeServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		viajeServiceMapper = new ViajeServiceMapper();
		viajeServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ViajeEntity' to 'Viaje'
	 * @param viajeEntity
	 */
	@Test
	public void testMapViajeEntityToViaje() {
		// Given
		ViajeEntity viajeEntity = new ViajeEntity();
		viajeEntity.setConfirmado(mockValues.nextByte());
		viajeEntity.setChofervehiculo(new ChofervehiculoEntity());
		viajeEntity.getChofervehiculo().setId(mockValues.nextLong());
		viajeEntity.setDestinohorario(new DestinohorarioEntity());
		viajeEntity.getDestinohorario().setId(mockValues.nextLong());
		
		// When
		Viaje viaje = viajeServiceMapper.mapViajeEntityToViaje(viajeEntity);
		
		// Then
		assertEquals(viajeEntity.getConfirmado(), viaje.getConfirmado());
		assertEquals(viajeEntity.getChofervehiculo().getId(), viaje.getChofervehiculoid());
		assertEquals(viajeEntity.getDestinohorario().getId(), viaje.getDestinohorarioid());
	}
	
	/**
	 * Test : Mapping from 'Viaje' to 'ViajeEntity'
	 */
	@Test
	public void testMapViajeToViajeEntity() {
		// Given
		Viaje viaje = new Viaje();
		viaje.setConfirmado(mockValues.nextByte());
		viaje.setChofervehiculoid(mockValues.nextLong());
		viaje.setDestinohorarioid(mockValues.nextLong());

		ViajeEntity viajeEntity = new ViajeEntity();
		
		// When
		viajeServiceMapper.mapViajeToViajeEntity(viaje, viajeEntity);
		
		// Then
		assertEquals(viaje.getConfirmado(), viajeEntity.getConfirmado());
		assertEquals(viaje.getChofervehiculoid(), viajeEntity.getChofervehiculo().getId());
		assertEquals(viaje.getDestinohorarioid(), viajeEntity.getDestinohorario().getId());
	}

}